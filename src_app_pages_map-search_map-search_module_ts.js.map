{"version":3,"file":"src_app_pages_map-search_map-search_module_ts.js","mappings":";;;;;;;;;;;;;;;;AAAkC;AACS;AACqB;AACxB;AACxC;AACA,IAAI,gDAAS;AACb;AACA;AACA;AACA,wDAAwD,OAAO,2DAAO,uBAAuB;AAC7F;AACA;AACA;AACA;AACA;AACA,0CAA0C,yBAAyB,oCAAoC,sDAAsD,mEAA4B,6BAA6B;AACtN,6BAA6B,gEAAyB,GAAG,uCAAuC,0BAA0B;AAC1H,eAAe,mDAAmD,+DAAwB;AAC1F,cAAc,qDAAU;AACxB,KAAK,iBAAiB;AACtB;AACA,CAAC,CAAC,iEAAiB;AACD;;;;;;;;;;;;;;;;ACtBX;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpB6C;AACtC,kCAAkC;AAClC,iCAAiC;AACjC;AACP;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACO;AACP,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA,iCAAiC,uBAAuB;AACxD;AACA;AACA;AACA,aAAa;AACb;AACA,iCAAiC,uBAAuB;AACxD;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,2BAA2B;AAChD;AACA,KAAK;AACL;AACA;AACA,2BAA2B;AAC3B,eAAe,4CAAU;AACzB;AACA;AACA;AACA;AACA,iCAAiC,uBAAuB;AACxD;AACA;AACA;AACA,aAAa;AACb;AACA,iCAAiC,uBAAuB;AACxD;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,qEAAqE;AACrE,WAAW,+CAAS;AACpB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACO;AACP,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD;AAChD;AACA;AACA,yDAAyD;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA,oBAAoB,kBAAkB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,2BAA2B;AAC3B;AACA;AACA,yBAAyB,uBAAuB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,2BAA2B;AAC3B;AACA;AACA,yBAAyB,uBAAuB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,4CAAU;AACjC;AACA;AACA;AACA;AACA,yCAAyC,uBAAuB;AAChE;AACA;AACA;AACA,qBAAqB;AACrB;AACA,yCAAyC,uBAAuB;AAChE;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,uBAAuB;AAChE;AACA;AACA;AACA,qBAAqB;AACrB;AACA,yCAAyC,uBAAuB;AAChE;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,uBAAuB;AAChE;AACA;AACA;AACA,qBAAqB;AACrB;AACA,yCAAyC,uBAAuB;AAChE;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACrbkC;AACsB;AACxD;AACA,eAAe,4CAAU;AACzB,gCAAgC,0DAAiB;AACjD;AACA,mCAAmC,kDAAS;AAC5C;AACA,iCAAiC,sDAAsD;AACvF;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACO;AACP,2BAA2B;AAC3B;AACA;;;;;;;;;;;;;;;;ACnBwC;AACjC;AACP;AACA,WAAW,qDAAY;AACvB;;;;;;;;;;;;;;;;;ACJwD;AACjD;AACP,QAAQ,0DAAiB;AACzB,eAAe,kDAAS;AACxB;AACA;AACA;AACO;AACP,QAAQ,0DAAiB;AACzB,QAAQ,kDAAS;AACjB;AACA;;;;;;;;;;;;;;;;ACXgC;AACzB;AACP,WAAW,6CAAI;AACf;;;;;;;;;;;;;;;;ACHO;AACP;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;;;;;;;;;;;;ACVU;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA+B;AACiB;AAC1D;AACgG;AAC3D;AACkB;AACT;AACA;AACC;AACP;AACxC,sDAAU;;;;;;;;;;;;;;;;;;ACV8C;AAC3B;AAC7B;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,0BAA0B,qEAAiB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,0CAAG;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAC4B;;;;;;;;;;;;;;;;AC1D7B;AACA;AACA;AACO;AACP;AACA;AACA,oBAAoB,kBAAkB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,+BAA+B;AAC/B;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9BA,iBAAiB,SAAI,IAAI,SAAI;AAC7B;AACA;AACA,eAAe,gBAAgB,sCAAsC,kBAAkB;AACvF,8BAA8B;AAC9B;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA,CAAC;AACD,kBAAkB,SAAI,IAAI,SAAI;AAC9B;AACA;AACA,6CAA6C,QAAQ;AACrD;AACA;AACA,kBAAkB,SAAI,IAAI,SAAI;AAC9B;AACA;AACA,YAAY,SAAI;AACuJ;AACrI;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACiB;AAClB;AACA;AACA;AACA;AACA,oDAAoD,OAAO,mEAAe,qBAAqB,cAAc;AAC7G,+DAA+D,OAAO,mEAAe,uBAAuB,cAAc;AAC1H,wDAAwD,OAAO,mEAAe,mBAAmB,cAAc;AAC/G,0DAA0D,OAAO,mEAAe,qBAAqB,cAAc;AACnH,qDAAqD,OAAO,mEAAe,sBAAsB,cAAc;AAC/G;AACA,2BAA2B,OAAO,uEAAmB,sBAAsB;AAC3E,gCAAgC,uEAAmB,6BAA6B;AAChF;AACA;AACA,KAAK;AACL;AACA,2BAA2B,OAAO,uEAAmB,sBAAsB;AAC3E,gCAAgC,uEAAmB,6BAA6B;AAChF;AACA;AACA,KAAK;AACL;AACA,2BAA2B,OAAO,uEAAmB,iBAAiB;AACtE,gCAAgC,uEAAmB,wBAAwB;AAC3E;AACA;AACA,KAAK;AACL;AACA,CAAC;AACuB;AACxB;AACA;AACA;AACA;AACA,qDAAqD,OAAO,mEAAe,qBAAqB,cAAc;AAC9G,gEAAgE,OAAO,mEAAe,uBAAuB,cAAc;AAC3H,2DAA2D,OAAO,mEAAe,qBAAqB,cAAc;AACpH;AACA,2BAA2B,OAAO,uEAAmB,sBAAsB;AAC3E,gCAAgC,uEAAmB,6BAA6B;AAChF;AACA;AACA,KAAK;AACL;AACA,2BAA2B,OAAO,uEAAmB,sBAAsB;AAC3E,gCAAgC,uEAAmB,6BAA6B;AAChF;AACA;AACA,KAAK;AACL;AACA,2BAA2B,OAAO,uEAAmB,oBAAoB;AACzE,gCAAgC,uEAAmB,2BAA2B;AAC9E;AACA;AACA,KAAK;AACL;AACA,2BAA2B,OAAO,uEAAmB,qBAAqB;AAC1E,gCAAgC,uEAAmB,4BAA4B;AAC/E;AACA;AACA,KAAK;AACL;AACA,2BAA2B,OAAO,uEAAmB,qBAAqB;AAC1E,gCAAgC,uEAAmB,4BAA4B;AAC/E;AACA;AACA,KAAK;AACL;AACA,2BAA2B,OAAO,uEAAmB,sBAAsB;AAC3E,gCAAgC,uEAAmB,6BAA6B;AAChF;AACA;AACA,KAAK;AACL;AACA,2BAA2B,OAAO,uEAAmB,iBAAiB;AACtE,gCAAgC,uEAAmB,wBAAwB;AAC3E;AACA;AACA,KAAK;AACL;AACA,CAAC;AACwB;AACzB;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C,uBAAuB,kBAAkB;AACzC,gBAAgB;AAChB;AACA;AACA,YAAY,qEAAiB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C,uBAAuB,mBAAmB;AAC1C,gBAAgB;AAChB;AACA;AACA,YAAY,qEAAiB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,CAAC,iEAAiB;AACG;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,qEAAiB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,wEAAoB;AACpC,2BAA2B,4CAAU;AACrC;AACA;AACA,yCAAyC,uBAAuB;AAChE;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB,wEAAoB;AACpC,uBAAuB,8DAAU;AACjC;AACA;AACA,yCAAyC,uBAAuB;AAChE;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB,wEAAoB;AACpC;AACA;AACA;AACA,SAAS;AACT;AACA,+CAA+C,OAAO,mEAAe,gBAAgB,cAAc;AACnG,gEAAgE,OAAO,mEAAe,gBAAgB,cAAc;AACpH,+EAA+E,OAAO,mEAAe,mBAAmB,cAAc;AACtI;AACA;AACA;AACA,gBAAgB,wEAAoB;AACpC,2BAA2B,4CAAU;AACrC;AACA;AACA,yCAAyC,uBAAuB;AAChE;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB,wEAAoB;AACpC,uBAAuB,8DAAU;AACjC;AACA;AACA,yCAAyC,uBAAuB;AAChE;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA,SAAS;AACT;AACA,yDAAyD,OAAO,mEAAe,6BAA6B,cAAc;AAC1H,8CAA8C,OAAO,mEAAe,kBAAkB,cAAc;AACpG;AACA;AACA,yBAAyB,uBAAuB;AAChD;AACA;AACA,eAAe,mEAAe,oBAAoB,cAAc;AAChE;AACA,gDAAgD,OAAO,mEAAe,oBAAoB,cAAc;AACxG,+EAA+E,OAAO,mEAAe,gCAAgC,cAAc;AACnJ,+DAA+D,OAAO,mEAAe,gBAAgB,cAAc;AACnH;AACA;AACA;AACA;AACA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AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,mBAAmB,8DAAU;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,mBAAmB,8DAAU;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACmB;AACpB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,YAAY,qEAAiB;AAC7B;AACA;AACA,eAAe,8DAAU;AACzB;AACA,SAAS;AACT;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,YAAY,qEAAiB;AAC7B;AACA;AACA,eAAe,8DAAU;AACzB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAC0B;AAC3B;AACA;AACA;AACA;AACA;AACA,uBAAuB,QAAQ;AAC/B,0BAA0B,QAAQ;AAClC,gBAAgB;AAChB;AACA;AACA,YAAY,qEAAiB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,qCAAqC;AACzD,gBAAgB;AAChB;AACA;AACA,YAAY,qEAAiB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACmB;AACpB;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB,oBAAoB;AACpB,gBAAgB;AAChB;AACA;AACA,YAAY,qEAAiB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB,oBAAoB;AACpB,gBAAgB;AAChB;AACA;AACA,YAAY,qEAAiB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACe;AAChB;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,yBAAyB;AACzB,gBAAgB;AAChB;AACA;AACA,YAAY,qEAAiB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB,wBAAwB;AACxB,uBAAuB;AACvB,gBAAgB;AAChB;AACA;AACA,YAAY,qEAAiB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,SAAS;AAC3B,wBAAwB,QAAQ;AAChC,uBAAuB,QAAQ;AAC/B,gBAAgB;AAChB;AACA;AACA,YAAY,qEAAiB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB,gBAAgB;AAChB;AACA;AACA,YAAY,qEAAiB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,oCAAoC;AACxD,gBAAgB;AAChB;AACA;AACA,YAAY,qEAAiB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,oCAAoC;AACxD,gBAAgB;AAChB;AACA;AACA,YAAY,qEAAiB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB,kBAAkB;AAClB,gBAAgB;AAChB;AACA;AACA,YAAY,qEAAiB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,aAAa;AACjC,kBAAkB,eAAe;AACjC,wBAAwB,SAAS;AACjC,gBAAgB;AAChB;AACA;AACA,YAAY,qEAAiB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACoB;AACrB;AACA;AACA;AACA;AACA,YAAY,qEAAiB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wFAAwF,8DAAU;AAClG;AACA;AACA;AACA;AACA;AACA,oCAAoC,0CAA0C;AAC9E;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,OAAO,mEAAe,mBAAmB;AACpG,2EAA2E,OAAO,mEAAe,wBAAwB;AACzH,wFAAwF,OAAO,mEAAe,sCAAsC,cAAc;AAClK,2EAA2E,OAAO,mEAAe,sCAAsC,cAAc;AACrJ,qFAAqF,OAAO,mEAAe,mCAAmC,cAAc;AAC5J,wEAAwE,OAAO,mEAAe,mCAAmC,cAAc;AAC/I,oFAAoF,OAAO,mEAAe,kCAAkC,cAAc;AAC1J,uEAAuE,OAAO,mEAAe,kCAAkC,cAAc;AAC7I,mFAAmF,OAAO,mEAAe,iCAAiC,cAAc;AACxJ,sEAAsE,OAAO,mEAAe,iCAAiC,cAAc;AAC3I,0DAA0D,OAAO,mEAAe,qBAAqB,cAAc;AACnH,6DAA6D,OAAO,mEAAe,wBAAwB,cAAc;AACzH,2DAA2D,OAAO,mEAAe,sBAAsB,cAAc;AACrH,6DAA6D,OAAO,mEAAe,wBAAwB,cAAc;AACzH,wDAAwD,OAAO,mEAAe,mBAAmB;AACjG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAC6B;AAC9B;AACA;AACA;AACA;AACA,YAAY,qEAAiB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4EAA4E,8DAAU;AACtF;AACA;AACA;AACA;AACA;AACA,oCAAoC,0CAA0C;AAC9E;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,wEAAoB;AACpC;AACA;AACA;AACA;AACA;AACA,qBAAqB,8DAAU;AAC/B;AACA,oCAAoC,0CAA0C;AAC9E;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,+CAA+C,OAAO,mEAAe,mBAAmB,cAAc;AACtG,8DAA8D,OAAO,mEAAe,yBAAyB,cAAc;AAC3H,oEAAoE,OAAO,mEAAe,0BAA0B;AACpH,4DAA4D,OAAO,mEAAe,gCAAgC;AAClH,6DAA6D,OAAO,mEAAe,iCAAiC;AACpH,iEAAiE,OAAO,mEAAe,uBAAuB;AAC9G,yDAAyD,OAAO,mEAAe,6BAA6B;AAC5G,0DAA0D,OAAO,mEAAe,8BAA8B;AAC9G,0DAA0D,OAAO,mEAAe,8BAA8B,cAAc;AAC5H,wDAAwD,OAAO,mEAAe,4BAA4B,cAAc;AACxH,sDAAsD,OAAO,mEAAe,0BAA0B,cAAc;AACpH,yDAAyD,OAAO,mEAAe,6BAA6B,cAAc;AAC1H,sDAAsD,OAAO,mEAAe,0BAA0B,cAAc;AACpH,8DAA8D,OAAO,mEAAe,4BAA4B,cAAc;AAC9H,+DAA+D,OAAO,mEAAe,0BAA0B,cAAc;AAC7H,+DAA+D,OAAO,mEAAe,0BAA0B,cAAc;AAC7H,gEAAgE,OAAO,mEAAe,6BAA6B,cAAc;AACjI,kDAAkD,OAAO,mEAAe,kBAAkB,cAAc;AACxG,yDAAyD,OAAO,mEAAe,6BAA6B,cAAc;AAC1H,6DAA6D,OAAO,mEAAe,0BAA0B;AAC7G,gEAAgE,OAAO,mEAAe,yBAAyB,cAAc;AAC7H,+CAA+C,OAAO,mEAAe,mBAAmB;AACxF;AACA;AACA;AACA,gBAAgB,wEAAoB;AACpC;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,uBAAuB,8DAAU;AACjC,8DAA8D,mBAAmB;AACjF,iBAAiB;AACjB;AACA,SAAS;AACT;AACA,gEAAgE,OAAO,mEAAe,8BAA8B;AACpH,+DAA+D,OAAO,mEAAe,8BAA8B;AACnH,oEAAoE,OAAO,mEAAe,iCAAiC,cAAc;AACzI,0EAA0E,OAAO,mEAAe,uCAAuC,cAAc;AACrJ,2DAA2D,OAAO,mEAAe,+BAA+B;AAChH,gEAAgE,OAAO,mEAAe,6BAA6B,cAAc;AACjI,iEAAiE,OAAO,mEAAe,8BAA8B,cAAc;AACnI,iEAAiE,OAAO,mEAAe,8BAA8B,cAAc;AACnI,qEAAqE,OAAO,mEAAe,kCAAkC,cAAc;AAC3I,0DAA0D,OAAO,mEAAe,uBAAuB,cAAc;AACrH,2EAA2E,OAAO,mEAAe,uBAAuB,cAAc;AACtI,0DAA0D,OAAO,mEAAe,uBAAuB,cAAc;AACrH;AACA;AACA;AACA,gBAAgB,wEAAoB;AACpC,uBAAuB,8DAAU;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB,wEAAoB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB,wEAAoB;AACpC,uBAAuB,8DAAU;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB,wEAAoB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB,wEAAoB;AACpC,uBAAuB,8DAAU;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB,wEAAoB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB,wEAAoB;AACpC,uBAAuB,8DAAU;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB,wEAAoB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB,wEAAoB;AACpC,uBAAuB,8DAAU;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB,wEAAoB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB,wEAAoB;AACpC,uBAAuB,8DAAU;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB,wEAAoB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB,wEAAoB;AACpC,uBAAuB,8DAAU;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB,wEAAoB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB,wEAAoB;AACpC,uBAAuB,8DAAU;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA,SAAS;AACT;AACA,yDAAyD,OAAO,mEAAe,sBAAsB;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACoB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,OAAO,mEAAe,kBAAkB,cAAc;AACxG;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,4DAA4D,OAAO,mEAAe,sBAAsB,cAAc;AACtH,8DAA8D,OAAO,mEAAe,uBAAuB,cAAc;AACzH,uDAAuD,OAAO,mEAAe,uBAAuB,cAAc;AAClH,6DAA6D,OAAO,mEAAe,qBAAqB,cAAc;AACtH,8DAA8D,OAAO,mEAAe,uBAAuB,cAAc;AACzH,uDAAuD,OAAO,mEAAe,uBAAuB,cAAc;AAClH,kEAAkE,OAAO,mEAAe,yBAAyB,cAAc;AAC/H,yDAAyD,OAAO,mEAAe,yBAAyB,cAAc;AACtH,8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","sources":["./node_modules/@ionic-native/base64/__ivy_ngcc__/ngx/index.js","./node_modules/@ionic-native/core/__ivy_ngcc__/bootstrap.js","./node_modules/@ionic-native/core/__ivy_ngcc__/decorators/common.js","./node_modules/@ionic-native/core/__ivy_ngcc__/decorators/cordova-function-override.js","./node_modules/@ionic-native/core/__ivy_ngcc__/decorators/cordova-instance.js","./node_modules/@ionic-native/core/__ivy_ngcc__/decorators/cordova-property.js","./node_modules/@ionic-native/core/__ivy_ngcc__/decorators/cordova.js","./node_modules/@ionic-native/core/__ivy_ngcc__/decorators/instance-property.js","./node_modules/@ionic-native/core/__ivy_ngcc__/decorators/interfaces.js","./node_modules/@ionic-native/core/__ivy_ngcc__/index.js","./node_modules/@ionic-native/core/__ivy_ngcc__/ionic-native-plugin.js","./node_modules/@ionic-native/core/__ivy_ngcc__/util.js","./node_modules/@ionic-native/google-maps/ngx/index.js","./src/app/pages/map-search/map-search-routing.module.ts","./src/app/pages/map-search/map-search.module.ts","./src/app/pages/map-search/map-search.page.ts","./src/app/pages/map-search/map-search.page.html"],"sourcesContent":["import { __extends } from \"tslib\";\nimport { Injectable } from '@angular/core';\nimport { IonicNativePlugin, cordova } from '@ionic-native/core';\nimport * as ɵngcc0 from '@angular/core';\nvar Base64 = /** @class */ (function (_super) {\n    __extends(Base64, _super);\n    function Base64() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Base64.prototype.encodeFile = function (filePath) { return cordova(this, \"encodeFile\", {}, arguments); };\n    Base64.pluginName = \"Base64\";\n    Base64.plugin = \"com-badrit-base64\";\n    Base64.pluginRef = \"plugins.Base64\";\n    Base64.repo = \"https://github.com/hazemhagrass/phonegap-base64\";\n    Base64.platforms = [\"Android\", \"iOS\"];\nBase64.ɵfac = /*@__PURE__*/ function () { var ɵBase64_BaseFactory; return function Base64_Factory(t) { return (ɵBase64_BaseFactory || (ɵBase64_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(Base64)))(t || Base64); }; }();\nBase64.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: Base64, factory: function (t) { return Base64.ɵfac(t); } });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(Base64, [{\n        type: Injectable\n    }], null, null); })();\n    return Base64;\n}(IonicNativePlugin));\nexport { Base64 };\n\n","export function checkReady() {\n    if (typeof process === 'undefined') {\n        var win_1 = typeof window !== 'undefined' ? window : {};\n        var DEVICE_READY_TIMEOUT_1 = 5000;\n        // To help developers using cordova, we listen for the device ready event and\n        // log an error if it didn't fire in a reasonable amount of time. Generally,\n        // when this happens, developers should remove and reinstall plugins, since\n        // an inconsistent plugin is often the culprit.\n        var before_1 = Date.now();\n        var didFireReady_1 = false;\n        win_1.document.addEventListener('deviceready', function () {\n            console.log(\"Ionic Native: deviceready event fired after \" + (Date.now() - before_1) + \" ms\");\n            didFireReady_1 = true;\n        });\n        setTimeout(function () {\n            if (!didFireReady_1 && win_1.cordova) {\n                console.warn(\"Ionic Native: deviceready did not fire within \" + DEVICE_READY_TIMEOUT_1 + \"ms. This can happen when plugins are in an inconsistent state. Try removing plugins from plugins/ and reinstalling them.\");\n            }\n        }, DEVICE_READY_TIMEOUT_1);\n    }\n}\n","import { fromEvent, Observable } from 'rxjs';\nexport var ERR_CORDOVA_NOT_AVAILABLE = { error: 'cordova_not_available' };\nexport var ERR_PLUGIN_NOT_INSTALLED = { error: 'plugin_not_installed' };\nexport function getPromise(callback) {\n    var tryNativePromise = function () {\n        if (Promise) {\n            return new Promise(function (resolve, reject) {\n                callback(resolve, reject);\n            });\n        }\n        else {\n            console.error('No Promise support or polyfill found. To enable Ionic Native support, please add the es6-promise polyfill before this script, or run with a library like Angular or on a recent browser.');\n        }\n    };\n    if (typeof window !== 'undefined' && window.angular) {\n        var doc = window.document;\n        var injector = window.angular.element(doc.querySelector('[ng-app]') || doc.body).injector();\n        if (injector) {\n            var $q = injector.get('$q');\n            return $q(function (resolve, reject) {\n                callback(resolve, reject);\n            });\n        }\n        console.warn(\"Angular 1 was detected but $q couldn't be retrieved. This is usually when the app is not bootstrapped on the html or body tag. Falling back to native promises which won't trigger an automatic digest when promises resolve.\");\n    }\n    return tryNativePromise();\n}\nexport function wrapPromise(pluginObj, methodName, args, opts) {\n    if (opts === void 0) { opts = {}; }\n    var pluginResult, rej;\n    var p = getPromise(function (resolve, reject) {\n        if (opts.destruct) {\n            pluginResult = callCordovaPlugin(pluginObj, methodName, args, opts, function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                return resolve(args);\n            }, function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                return reject(args);\n            });\n        }\n        else {\n            pluginResult = callCordovaPlugin(pluginObj, methodName, args, opts, resolve, reject);\n        }\n        rej = reject;\n    });\n    // Angular throws an error on unhandled rejection, but in this case we have already printed\n    // a warning that Cordova is undefined or the plugin is uninstalled, so there is no reason\n    // to error\n    if (pluginResult && pluginResult.error) {\n        p.catch(function () { });\n        typeof rej === 'function' && rej(pluginResult.error);\n    }\n    return p;\n}\nfunction wrapOtherPromise(pluginObj, methodName, args, opts) {\n    if (opts === void 0) { opts = {}; }\n    return getPromise(function (resolve, reject) {\n        var pluginResult = callCordovaPlugin(pluginObj, methodName, args, opts);\n        if (pluginResult) {\n            if (pluginResult.error) {\n                reject(pluginResult.error);\n            }\n            else if (pluginResult.then) {\n                pluginResult.then(resolve).catch(reject);\n            }\n        }\n        else {\n            reject({ error: 'unexpected_error' });\n        }\n    });\n}\nfunction wrapObservable(pluginObj, methodName, args, opts) {\n    if (opts === void 0) { opts = {}; }\n    return new Observable(function (observer) {\n        var pluginResult;\n        if (opts.destruct) {\n            pluginResult = callCordovaPlugin(pluginObj, methodName, args, opts, function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                return observer.next(args);\n            }, function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                return observer.error(args);\n            });\n        }\n        else {\n            pluginResult = callCordovaPlugin(pluginObj, methodName, args, opts, observer.next.bind(observer), observer.error.bind(observer));\n        }\n        if (pluginResult && pluginResult.error) {\n            observer.error(pluginResult.error);\n            observer.complete();\n        }\n        return function () {\n            try {\n                if (opts.clearFunction) {\n                    if (opts.clearWithArgs) {\n                        return callCordovaPlugin(pluginObj, opts.clearFunction, args, opts, observer.next.bind(observer), observer.error.bind(observer));\n                    }\n                    return callCordovaPlugin(pluginObj, opts.clearFunction, []);\n                }\n            }\n            catch (e) {\n                console.warn('Unable to clear the previous observable watch for', pluginObj.constructor.getPluginName(), methodName);\n                console.warn(e);\n            }\n        };\n    });\n}\n/**\n * Wrap the event with an observable\n * @private\n * @param event event name\n * @param element The element to attach the event listener to\n * @returns {Observable}\n */\nfunction wrapEventObservable(event, element) {\n    element =\n        typeof window !== 'undefined' && element\n            ? get(window, element)\n            : element || (typeof window !== 'undefined' ? window : {});\n    return fromEvent(element, event);\n}\nexport function checkAvailability(plugin, methodName, pluginName) {\n    var pluginRef, pluginInstance, pluginPackage;\n    if (typeof plugin === 'string') {\n        pluginRef = plugin;\n    }\n    else {\n        pluginRef = plugin.constructor.getPluginRef();\n        pluginName = plugin.constructor.getPluginName();\n        pluginPackage = plugin.constructor.getPluginInstallName();\n    }\n    pluginInstance = getPlugin(pluginRef);\n    if (!pluginInstance || (!!methodName && typeof pluginInstance[methodName] === 'undefined')) {\n        if (typeof window === 'undefined' || !window.cordova) {\n            cordovaWarn(pluginName, methodName);\n            return ERR_CORDOVA_NOT_AVAILABLE;\n        }\n        pluginWarn(pluginName, pluginPackage, methodName);\n        return ERR_PLUGIN_NOT_INSTALLED;\n    }\n    return true;\n}\n/**\n * Checks if _objectInstance exists and has the method/property\n * @private\n */\nexport function instanceAvailability(pluginObj, methodName) {\n    return pluginObj._objectInstance && (!methodName || typeof pluginObj._objectInstance[methodName] !== 'undefined');\n}\nexport function setIndex(args, opts, resolve, reject) {\n    if (opts === void 0) { opts = {}; }\n    // ignore resolve and reject in case sync\n    if (opts.sync) {\n        return args;\n    }\n    // If the plugin method expects myMethod(success, err, options)\n    if (opts.callbackOrder === 'reverse') {\n        // Get those arguments in the order [resolve, reject, ...restOfArgs]\n        args.unshift(reject);\n        args.unshift(resolve);\n    }\n    else if (opts.callbackStyle === 'node') {\n        args.push(function (err, result) {\n            if (err) {\n                reject(err);\n            }\n            else {\n                resolve(result);\n            }\n        });\n    }\n    else if (opts.callbackStyle === 'object' && opts.successName && opts.errorName) {\n        var obj = {};\n        obj[opts.successName] = resolve;\n        obj[opts.errorName] = reject;\n        args.push(obj);\n    }\n    else if (typeof opts.successIndex !== 'undefined' || typeof opts.errorIndex !== 'undefined') {\n        var setSuccessIndex = function () {\n            // If we've specified a success/error index\n            if (opts.successIndex > args.length) {\n                args[opts.successIndex] = resolve;\n            }\n            else {\n                args.splice(opts.successIndex, 0, resolve);\n            }\n        };\n        var setErrorIndex = function () {\n            // We don't want that the reject cb gets spliced into the position of an optional argument that has not been\n            // defined and thus causing non expected behavior.\n            if (opts.errorIndex > args.length) {\n                args[opts.errorIndex] = reject; // insert the reject fn at the correct specific index\n            }\n            else {\n                args.splice(opts.errorIndex, 0, reject); // otherwise just splice it into the array\n            }\n        };\n        if (opts.successIndex > opts.errorIndex) {\n            setErrorIndex();\n            setSuccessIndex();\n        }\n        else {\n            setSuccessIndex();\n            setErrorIndex();\n        }\n    }\n    else {\n        // Otherwise, let's tack them on to the end of the argument list\n        // which is 90% of cases\n        args.push(resolve);\n        args.push(reject);\n    }\n    return args;\n}\nexport function callCordovaPlugin(pluginObj, methodName, args, opts, resolve, reject) {\n    if (opts === void 0) { opts = {}; }\n    // Try to figure out where the success/error callbacks need to be bound\n    // to our promise resolve/reject handlers.\n    args = setIndex(args, opts, resolve, reject);\n    var availabilityCheck = checkAvailability(pluginObj, methodName);\n    if (availabilityCheck === true) {\n        var pluginInstance = getPlugin(pluginObj.constructor.getPluginRef());\n        return pluginInstance[methodName].apply(pluginInstance, args);\n    }\n    else {\n        return availabilityCheck;\n    }\n}\nexport function callInstance(pluginObj, methodName, args, opts, resolve, reject) {\n    if (opts === void 0) { opts = {}; }\n    args = setIndex(args, opts, resolve, reject);\n    if (instanceAvailability(pluginObj, methodName)) {\n        return pluginObj._objectInstance[methodName].apply(pluginObj._objectInstance, args);\n    }\n}\nexport function getPlugin(pluginRef) {\n    if (typeof window !== 'undefined') {\n        return get(window, pluginRef);\n    }\n    return null;\n}\nexport function get(element, path) {\n    var paths = path.split('.');\n    var obj = element;\n    for (var i = 0; i < paths.length; i++) {\n        if (!obj) {\n            return null;\n        }\n        obj = obj[paths[i]];\n    }\n    return obj;\n}\nexport function pluginWarn(pluginName, plugin, method) {\n    if (method) {\n        console.warn('Native: tried calling ' + pluginName + '.' + method + ', but the ' + pluginName + ' plugin is not installed.');\n    }\n    else {\n        console.warn(\"Native: tried accessing the \" + pluginName + \" plugin but it's not installed.\");\n    }\n    if (plugin) {\n        console.warn(\"Install the \" + pluginName + \" plugin: 'ionic cordova plugin add \" + plugin + \"'\");\n    }\n}\n/**\n * @private\n * @param pluginName\n * @param method\n */\nexport function cordovaWarn(pluginName, method) {\n    if (typeof process === 'undefined') {\n        if (method) {\n            console.warn('Native: tried calling ' +\n                pluginName +\n                '.' +\n                method +\n                ', but Cordova is not available. Make sure to include cordova.js or run in a device/simulator');\n        }\n        else {\n            console.warn('Native: tried accessing the ' +\n                pluginName +\n                ' plugin but Cordova is not available. Make sure to include cordova.js or run in a device/simulator');\n        }\n    }\n}\n/**\n * @private\n */\nexport var wrap = function (pluginObj, methodName, opts) {\n    if (opts === void 0) { opts = {}; }\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (opts.sync) {\n            // Sync doesn't wrap the plugin with a promise or observable, it returns the result as-is\n            return callCordovaPlugin(pluginObj, methodName, args, opts);\n        }\n        else if (opts.observable) {\n            return wrapObservable(pluginObj, methodName, args, opts);\n        }\n        else if (opts.eventObservable && opts.event) {\n            return wrapEventObservable(opts.event, opts.element);\n        }\n        else if (opts.otherPromise) {\n            return wrapOtherPromise(pluginObj, methodName, args, opts);\n        }\n        else {\n            return wrapPromise(pluginObj, methodName, args, opts);\n        }\n    };\n};\n/**\n * @private\n */\nexport function wrapInstance(pluginObj, methodName, opts) {\n    if (opts === void 0) { opts = {}; }\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (opts.sync) {\n            return callInstance(pluginObj, methodName, args, opts);\n        }\n        else if (opts.observable) {\n            return new Observable(function (observer) {\n                var pluginResult;\n                if (opts.destruct) {\n                    pluginResult = callInstance(pluginObj, methodName, args, opts, function () {\n                        var args = [];\n                        for (var _i = 0; _i < arguments.length; _i++) {\n                            args[_i] = arguments[_i];\n                        }\n                        return observer.next(args);\n                    }, function () {\n                        var args = [];\n                        for (var _i = 0; _i < arguments.length; _i++) {\n                            args[_i] = arguments[_i];\n                        }\n                        return observer.error(args);\n                    });\n                }\n                else {\n                    pluginResult = callInstance(pluginObj, methodName, args, opts, observer.next.bind(observer), observer.error.bind(observer));\n                }\n                if (pluginResult && pluginResult.error) {\n                    observer.error(pluginResult.error);\n                }\n                return function () {\n                    try {\n                        if (opts.clearWithArgs) {\n                            return callInstance(pluginObj, opts.clearFunction, args, opts, observer.next.bind(observer), observer.error.bind(observer));\n                        }\n                        return callInstance(pluginObj, opts.clearFunction, []);\n                    }\n                    catch (e) {\n                        console.warn('Unable to clear the previous observable watch for', pluginObj.constructor.getPluginName(), methodName);\n                        console.warn(e);\n                    }\n                };\n            });\n        }\n        else if (opts.otherPromise) {\n            return getPromise(function (resolve, reject) {\n                var result;\n                if (opts.destruct) {\n                    result = callInstance(pluginObj, methodName, args, opts, function () {\n                        var args = [];\n                        for (var _i = 0; _i < arguments.length; _i++) {\n                            args[_i] = arguments[_i];\n                        }\n                        return resolve(args);\n                    }, function () {\n                        var args = [];\n                        for (var _i = 0; _i < arguments.length; _i++) {\n                            args[_i] = arguments[_i];\n                        }\n                        return reject(args);\n                    });\n                }\n                else {\n                    result = callInstance(pluginObj, methodName, args, opts, resolve, reject);\n                }\n                if (result && result.then) {\n                    result.then(resolve, reject);\n                }\n                else {\n                    reject();\n                }\n            });\n        }\n        else {\n            var pluginResult_1, rej_1;\n            var p = getPromise(function (resolve, reject) {\n                if (opts.destruct) {\n                    pluginResult_1 = callInstance(pluginObj, methodName, args, opts, function () {\n                        var args = [];\n                        for (var _i = 0; _i < arguments.length; _i++) {\n                            args[_i] = arguments[_i];\n                        }\n                        return resolve(args);\n                    }, function () {\n                        var args = [];\n                        for (var _i = 0; _i < arguments.length; _i++) {\n                            args[_i] = arguments[_i];\n                        }\n                        return reject(args);\n                    });\n                }\n                else {\n                    pluginResult_1 = callInstance(pluginObj, methodName, args, opts, resolve, reject);\n                }\n                rej_1 = reject;\n            });\n            // Angular throws an error on unhandled rejection, but in this case we have already printed\n            // a warning that Cordova is undefined or the plugin is uninstalled, so there is no reason\n            // to error\n            if (pluginResult_1 && pluginResult_1.error) {\n                p.catch(function () { });\n                typeof rej_1 === 'function' && rej_1(pluginResult_1.error);\n            }\n            return p;\n        }\n    };\n}\n","import { Observable } from 'rxjs';\nimport { checkAvailability, getPlugin } from './common';\nfunction overrideFunction(pluginObj, methodName) {\n    return new Observable(function (observer) {\n        var availabilityCheck = checkAvailability(pluginObj, methodName);\n        if (availabilityCheck === true) {\n            var pluginInstance_1 = getPlugin(pluginObj.constructor.getPluginRef());\n            pluginInstance_1[methodName] = observer.next.bind(observer);\n            return function () { return (pluginInstance_1[methodName] = function () { }); };\n        }\n        else {\n            observer.error(availabilityCheck);\n            observer.complete();\n        }\n    });\n}\nexport function cordovaFunctionOverride(pluginObj, methodName, args) {\n    if (args === void 0) { args = []; }\n    return overrideFunction(pluginObj, methodName);\n}\n","import { wrapInstance } from './common';\nexport function cordovaInstance(pluginObj, methodName, config, args) {\n    args = Array.from(args);\n    return wrapInstance(pluginObj, methodName, config).apply(this, args);\n}\n","import { checkAvailability, getPlugin } from './common';\nexport function cordovaPropertyGet(pluginObj, key) {\n    if (checkAvailability(pluginObj, key) === true) {\n        return getPlugin(pluginObj.constructor.getPluginRef())[key];\n    }\n    return null;\n}\nexport function cordovaPropertySet(pluginObj, key, value) {\n    if (checkAvailability(pluginObj, key) === true) {\n        getPlugin(pluginObj.constructor.getPluginRef())[key] = value;\n    }\n}\n","import { wrap } from './common';\nexport function cordova(pluginObj, methodName, config, args) {\n    return wrap(pluginObj, methodName, config).apply(this, args);\n}\n","export function instancePropertyGet(pluginObj, key) {\n    if (pluginObj._objectInstance && pluginObj._objectInstance[key]) {\n        return pluginObj._objectInstance[key];\n    }\n    return null;\n}\nexport function instancePropertySet(pluginObj, key, value) {\n    if (pluginObj._objectInstance) {\n        pluginObj._objectInstance[key] = value;\n    }\n}\n","export {};\n","import { checkReady } from './bootstrap';\nexport { IonicNativePlugin } from './ionic-native-plugin';\n// Decorators\nexport { checkAvailability, instanceAvailability, wrap, getPromise } from './decorators/common';\nexport * from './decorators/cordova';\nexport * from './decorators/cordova-function-override';\nexport * from './decorators/cordova-instance';\nexport * from './decorators/cordova-property';\nexport * from './decorators/instance-property';\nexport * from './decorators/interfaces';\ncheckReady();\n\n","import { checkAvailability } from './decorators/common';\nimport { get } from './util';\nvar IonicNativePlugin = /** @class */ (function () {\n    function IonicNativePlugin() {\n    }\n    /**\n     * Returns a boolean that indicates whether the plugin is installed\n     * @return {boolean}\n     */\n    IonicNativePlugin.installed = function () {\n        var isAvailable = checkAvailability(this.pluginRef) === true;\n        return isAvailable;\n    };\n    /**\n     * Returns the original plugin object\n     */\n    IonicNativePlugin.getPlugin = function () {\n        if (typeof window !== 'undefined') {\n            return get(window, this.pluginRef);\n        }\n        return null;\n    };\n    /**\n     * Returns the plugin's name\n     */\n    IonicNativePlugin.getPluginName = function () {\n        var pluginName = this.pluginName;\n        return pluginName;\n    };\n    /**\n     * Returns the plugin's reference\n     */\n    IonicNativePlugin.getPluginRef = function () {\n        var pluginRef = this.pluginRef;\n        return pluginRef;\n    };\n    /**\n     * Returns the plugin's install name\n     */\n    IonicNativePlugin.getPluginInstallName = function () {\n        var plugin = this.plugin;\n        return plugin;\n    };\n    /**\n     * Returns the plugin's supported platforms\n     */\n    IonicNativePlugin.getSupportedPlatforms = function () {\n        var platform = this.platforms;\n        return platform;\n    };\n    IonicNativePlugin.pluginName = '';\n    IonicNativePlugin.pluginRef = '';\n    IonicNativePlugin.plugin = '';\n    IonicNativePlugin.repo = '';\n    IonicNativePlugin.platforms = [];\n    IonicNativePlugin.install = '';\n    return IonicNativePlugin;\n}());\nexport { IonicNativePlugin };\n","/**\n * @private\n */\nexport function get(element, path) {\n    var paths = path.split('.');\n    var obj = element;\n    for (var i = 0; i < paths.length; i++) {\n        if (!obj) {\n            return null;\n        }\n        obj = obj[paths[i]];\n    }\n    return obj;\n}\n/**\n * @private\n */\nexport function getPromise(callback) {\n    if (callback === void 0) { callback = function () { }; }\n    var tryNativePromise = function () {\n        if (typeof Promise === 'function' || (typeof window !== 'undefined' && window.Promise)) {\n            return new Promise(function (resolve, reject) {\n                callback(resolve, reject);\n            });\n        }\n        else {\n            console.error('No Promise support or polyfill found. To enable Ionic Native support, please add the es6-promise polyfill before this script, or run with a library like Angular or on a recent browser.');\n        }\n    };\n    return tryNativePromise();\n}\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar _this = this;\nimport { IonicNativePlugin, instanceAvailability, cordovaInstance, instancePropertyGet, instancePropertySet, checkAvailability, getPromise } from '@ionic-native/core';\nimport { Observable } from 'rxjs';\nvar TARGET_ELEMENT_FINDING_QUERYS = [\n    '.show-page #',\n    'ion-router-outlet[main] #',\n    '#'\n];\nvar LatLng = /** @class */ (function () {\n    function LatLng(lat, lng) {\n        this.lat = lat;\n        this.lng = lng;\n    }\n    LatLng.prototype.equals = function (other) {\n        return this.lat === other.lat && this.lng === other.lng;\n    };\n    LatLng.prototype.toString = function () {\n        return this.lat + ',' + this.lng;\n    };\n    LatLng.prototype.toUrlValue = function (precision) {\n        precision = precision || 6;\n        return this.lat.toFixed(precision) + ',' + this.lng.toFixed(precision);\n    };\n    return LatLng;\n}());\nexport { LatLng };\nvar LatLngBounds = /** @class */ (function () {\n    function LatLngBounds(points) {\n        this._objectInstance = new (GoogleMaps.getPlugin()).LatLngBounds(points);\n    }\n    LatLngBounds.prototype.toString = function () { return cordovaInstance(this, \"toString\", { \"sync\": true }, arguments); };\n    LatLngBounds.prototype.toUrlValue = function (precision) { return cordovaInstance(this, \"toUrlValue\", { \"sync\": true }, arguments); };\n    LatLngBounds.prototype.extend = function (LatLng) { return cordovaInstance(this, \"extend\", { \"sync\": true }, arguments); };\n    LatLngBounds.prototype.contains = function (LatLng) { return cordovaInstance(this, \"contains\", { \"sync\": true }, arguments); };\n    LatLngBounds.prototype.getCenter = function () { return cordovaInstance(this, \"getCenter\", { \"sync\": true }, arguments); };\n    Object.defineProperty(LatLngBounds.prototype, \"northeast\", {\n        get: function () { return instancePropertyGet(this, \"northeast\"); },\n        set: function (value) { instancePropertySet(this, \"northeast\", value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LatLngBounds.prototype, \"southwest\", {\n        get: function () { return instancePropertyGet(this, \"southwest\"); },\n        set: function (value) { instancePropertySet(this, \"southwest\", value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LatLngBounds.prototype, \"type\", {\n        get: function () { return instancePropertyGet(this, \"type\"); },\n        set: function (value) { instancePropertySet(this, \"type\", value); },\n        enumerable: true,\n        configurable: true\n    });\n    return LatLngBounds;\n}());\nexport { LatLngBounds };\nvar VisibleRegion = /** @class */ (function () {\n    function VisibleRegion(southwest, northeast, farLeft, farRight, nearLeft, nearRight) {\n        this._objectInstance = new (GoogleMaps.getPlugin()).VisibleRegion(southwest, northeast, farLeft, farRight, nearLeft, nearRight);\n    }\n    VisibleRegion.prototype.toString = function () { return cordovaInstance(this, \"toString\", { \"sync\": true }, arguments); };\n    VisibleRegion.prototype.toUrlValue = function (precision) { return cordovaInstance(this, \"toUrlValue\", { \"sync\": true }, arguments); };\n    VisibleRegion.prototype.contains = function (LatLng) { return cordovaInstance(this, \"contains\", { \"sync\": true }, arguments); };\n    Object.defineProperty(VisibleRegion.prototype, \"northeast\", {\n        get: function () { return instancePropertyGet(this, \"northeast\"); },\n        set: function (value) { instancePropertySet(this, \"northeast\", value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(VisibleRegion.prototype, \"southwest\", {\n        get: function () { return instancePropertyGet(this, \"southwest\"); },\n        set: function (value) { instancePropertySet(this, \"southwest\", value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(VisibleRegion.prototype, \"farLeft\", {\n        get: function () { return instancePropertyGet(this, \"farLeft\"); },\n        set: function (value) { instancePropertySet(this, \"farLeft\", value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(VisibleRegion.prototype, \"farRight\", {\n        get: function () { return instancePropertyGet(this, \"farRight\"); },\n        set: function (value) { instancePropertySet(this, \"farRight\", value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(VisibleRegion.prototype, \"nearLeft\", {\n        get: function () { return instancePropertyGet(this, \"nearLeft\"); },\n        set: function (value) { instancePropertySet(this, \"nearLeft\", value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(VisibleRegion.prototype, \"nearRight\", {\n        get: function () { return instancePropertyGet(this, \"nearRight\"); },\n        set: function (value) { instancePropertySet(this, \"nearRight\", value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(VisibleRegion.prototype, \"type\", {\n        get: function () { return instancePropertyGet(this, \"type\"); },\n        set: function (value) { instancePropertySet(this, \"type\", value); },\n        enumerable: true,\n        configurable: true\n    });\n    return VisibleRegion;\n}());\nexport { VisibleRegion };\n/**\n * @hidden\n */\nexport var StreetViewSource = {\n    DEFAULT: 'DEFAULT',\n    OUTDOOR: 'OUTDOOR'\n};\n/**\n * @hidden\n * You can listen to these events where appropriate\n */\nexport var GoogleMapsEvent = {\n    MAP_READY: 'map_ready',\n    MAP_CLICK: 'map_click',\n    MAP_LONG_CLICK: 'map_long_click',\n    POI_CLICK: 'poi_click',\n    MY_LOCATION_CLICK: 'my_location_click',\n    MY_LOCATION_BUTTON_CLICK: 'my_location_button_click',\n    INDOOR_BUILDING_FOCUSED: 'indoor_building_focused',\n    INDOOR_LEVEL_ACTIVATED: 'indoor_level_activated',\n    CAMERA_MOVE_START: 'camera_move_start',\n    CAMERA_MOVE: 'camera_move',\n    CAMERA_MOVE_END: 'camera_move_end',\n    OVERLAY_CLICK: 'overlay_click',\n    POLYGON_CLICK: 'polygon_click',\n    POLYLINE_CLICK: 'polyline_click',\n    CIRCLE_CLICK: 'circle_click',\n    GROUND_OVERLAY_CLICK: 'groundoverlay_click',\n    INFO_CLICK: 'info_click',\n    INFO_LONG_CLICK: 'info_long_click',\n    INFO_CLOSE: 'info_close',\n    INFO_OPEN: 'info_open',\n    MARKER_CLICK: 'marker_click',\n    MARKER_DRAG: 'marker_drag',\n    MARKER_DRAG_START: 'marker_drag_start',\n    MARKER_DRAG_END: 'marker_drag_end',\n    MAP_DRAG: 'map_drag',\n    MAP_DRAG_START: 'map_drag_start',\n    MAP_DRAG_END: 'map_drag_end',\n    KML_CLICK: 'kml_click',\n    PANORAMA_READY: 'panorama_ready',\n    PANORAMA_CAMERA_CHANGE: 'panorama_camera_change',\n    PANORAMA_LOCATION_CHANGE: 'panorama_location_change',\n    PANORAMA_CLICK: 'panorama_click'\n};\n/**\n * @hidden\n */\nexport var GoogleMapsAnimation = {\n    BOUNCE: 'BOUNCE',\n    DROP: 'DROP'\n};\n/**\n * @hidden\n */\nexport var GoogleMapsMapTypeId = {\n    NORMAL: 'MAP_TYPE_NORMAL',\n    ROADMAP: 'MAP_TYPE_NORMAL',\n    SATELLITE: 'MAP_TYPE_SATELLITE',\n    HYBRID: 'MAP_TYPE_HYBRID',\n    TERRAIN: 'MAP_TYPE_TERRAIN',\n    NONE: 'MAP_TYPE_NONE'\n};\nvar GoogleMaps = /** @class */ (function (_super) {\n    __extends(GoogleMaps, _super);\n    function GoogleMaps() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Creates a new GoogleMap instance\n     * @param element {string | HTMLElement} Element ID or reference to attach the map to\n     * @param options {GoogleMapOptions} [options] Options\n     * @return {GoogleMap}\n     */\n    GoogleMaps.create = function (element, options) {\n        if (checkAvailability(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === true) {\n            if (element instanceof HTMLElement) {\n                if (!element.offsetParent) {\n                    throw new Error('Element must be under <body>');\n                }\n                if (element.getAttribute('__pluginMapId')) {\n                    throw new Error(element.tagName + \"[__pluginMapId='\" + element.getAttribute('__pluginMapId') + \"'] has already map.\");\n                }\n            }\n            else if (typeof element === 'object') {\n                options = element;\n                element = null;\n            }\n            var googleMap = new GoogleMap(element, options);\n            googleMap.set('_overlays', {});\n            return googleMap;\n        }\n        else {\n            var errorMessage = [\n                '[GoogleMaps]'\n            ];\n            if (!window.cordova) {\n                errorMessage.push('You need to execute \"$> ionic cordova run browser\".');\n                errorMessage.push('\"$> ionic serve\" is not supported.');\n            }\n            else {\n                errorMessage.push('cordova-plugin-googlemaps is not installed or not ready yet.');\n            }\n            if (element instanceof HTMLElement) {\n                displayErrorMessage(element, errorMessage.join('<br />'));\n            }\n            else if (typeof element === 'string') {\n                var targets = Array.from(document.querySelectorAll('#' + element));\n                if (targets.length > 0) {\n                    targets = targets.filter(function (target) {\n                        return !target.hasAttribute('__pluginmapid');\n                    });\n                }\n                if (targets.length === 1 && targets[0]) {\n                    displayErrorMessage(targets[0], errorMessage.join('<br />'));\n                }\n            }\n            throw new Error(errorMessage.join(''));\n        }\n    };\n    /**\n     * @deprecation keep this for backward compatibility.\n     * @hidden\n     */\n    GoogleMaps.prototype.create = function (element, options) {\n        console.error('GoogleMaps', '[deprecated] Please use GoogleMaps.create()');\n        return GoogleMaps.create(element, options);\n    };\n    /**\n     * Creates a new StreetView instance\n     * @param element {string | HTMLElement} Element ID or reference to attach the map to\n     * @param options {StreetViewOptions} [options] Options\n     * @return {StreetViewPanorama}\n     */\n    GoogleMaps.createPanorama = function (element, options) {\n        if (checkAvailability(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === true) {\n            if (element instanceof HTMLElement) {\n                if (!element.offsetParent) {\n                    throw new Error('Element must be under <body>');\n                }\n                if (element.getAttribute('__pluginMapId')) {\n                    throw new Error(element.tagName + \"[__pluginMapId='\" + element.getAttribute('__pluginMapId') + \"'] has already map.\");\n                }\n            }\n            return new StreetViewPanorama(element, options);\n        }\n        else {\n            var errorMessage = [\n                '[GoogleMaps]'\n            ];\n            if (!window.cordova) {\n                errorMessage.push('You need to execute \"$> ionic cordova run browser\".');\n                errorMessage.push('\"$> ionic serve\" is not supported.');\n            }\n            else {\n                errorMessage.push('cordova-plugin-googlemaps is not installed or not ready yet.');\n            }\n            if (element instanceof HTMLElement) {\n                displayErrorMessage(element, errorMessage.join('<br />'));\n            }\n            else if (typeof element === 'string') {\n                var targets = Array.from(document.querySelectorAll('#' + element));\n                if (targets.length > 0) {\n                    targets = targets.filter(function (target) {\n                        return !target.hasAttribute('__pluginmapid');\n                    });\n                }\n                if (targets.length === 1 && targets[0]) {\n                    displayErrorMessage(targets[0], errorMessage.join('<br />'));\n                }\n            }\n            throw new Error(errorMessage.join(''));\n        }\n    };\n    GoogleMaps.pluginName = \"GoogleMaps\";\n    GoogleMaps.pluginRef = \"plugin.google.maps\";\n    GoogleMaps.plugin = \"cordova-plugin-googlemaps\";\n    GoogleMaps.repo = \"https://github.com/mapsplugin/cordova-plugin-googlemaps\";\n    GoogleMaps.document = \"https://ionicframework.com/docs/native/google-maps/\";\n    GoogleMaps.install = \"ionic cordova plugin add cordova-plugin-googlemaps --variable API_KEY_FOR_ANDROID=\\\"YOUR_ANDROID_API_KEY_IS_HERE\\\" --variable API_KEY_FOR_IOS=\\\"YOUR_IOS_API_KEY_IS_HERE\\\"\";\n    GoogleMaps.installVariables = [\"API_KEY_FOR_ANDROID\", \"API_KEY_FOR_IOS\"];\n    GoogleMaps.platforms = [\"Android\", \"iOS\", \"Browser\"];\n    GoogleMaps = __decorate([], GoogleMaps);\n    return GoogleMaps;\n}(IonicNativePlugin));\nexport { GoogleMaps };\nvar displayErrorMessage = function (element, message) {\n    var errorDiv = document.createElement('div');\n    errorDiv.innerHTML = message;\n    errorDiv.style.color = 'red';\n    errorDiv.style.position = 'absolute';\n    errorDiv.style.width = '80%';\n    errorDiv.style.height = '50%';\n    errorDiv.style.top = '0px';\n    errorDiv.style.bottom = '0px';\n    errorDiv.style.right = '0px';\n    errorDiv.style.left = '0px';\n    errorDiv.style.padding = '0px';\n    errorDiv.style.margin = 'auto';\n    element.style.position = 'relative';\n    element.style.backgroundColor = '#ccc7';\n    element.appendChild(errorDiv);\n};\nvar ɵ0 = displayErrorMessage;\nvar normalizeArgumentsOfEventListener = function (_objectInstance, args) {\n    if (args[args.length - 1] instanceof GoogleMaps.getPlugin().BaseClass) {\n        if (args[args.length - 1].type === 'Map' || args[args.length - 1].type === 'StreetViewPanorama') {\n            args[args.length - 1] = _this;\n        }\n        else if (_objectInstance.__pgmId.indexOf('markercluster_') !== -1) {\n            var _overlays = _objectInstance.getMap().get('_overlays') || {};\n            var overlay = _overlays[args[args.length - 1].getId()];\n            if (!overlay) {\n                var markerJS = args[args.length - 1];\n                var markerId_1 = markerJS.getId();\n                var markerCluster = _objectInstance;\n                overlay = new Marker(markerCluster.getMap(), markerJS);\n                _objectInstance.getMap().get('_overlays')[markerId_1] = overlay;\n                markerJS.one(markerJS.getId() + '_remove', function () {\n                    _objectInstance.getMap().get('_overlays')[markerId_1] = null;\n                    delete _objectInstance.getMap().get('_overlays')[markerId_1];\n                });\n            }\n            args[args.length - 1] = overlay;\n        }\n        else {\n            args[args.length - 1] = _objectInstance.getMap().get('_overlays')[args[args.length - 1].getId()];\n        }\n    }\n    return args;\n};\nvar ɵ1 = normalizeArgumentsOfEventListener;\nvar BaseClass = /** @class */ (function () {\n    function BaseClass(objInstance) {\n        if (checkAvailability(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === true) {\n            if (!objInstance) {\n                objInstance = new (GoogleMaps.getPlugin().BaseClass)();\n            }\n            this._objectInstance = objInstance;\n        }\n        else {\n            throw new Error('cordova-plugin-googlemaps is not ready. Please use platform.ready() before executing any methods.');\n        }\n    }\n    BaseClass.prototype.addEventListener = function (eventName) {\n        var _this = this;\n        return (function () {\n            if (instanceAvailability(_this) === true) {\n                return new Observable(function (observer) {\n                    _this._objectInstance.addEventListener(eventName, function () {\n                        var args = [];\n                        for (var _i = 0; _i < arguments.length; _i++) {\n                            args[_i] = arguments[_i];\n                        }\n                        var newArgs = normalizeArgumentsOfEventListener.call(_this, _this._objectInstance, args);\n                        observer.next(newArgs);\n                    });\n                });\n            }\n        })();\n    };\n    BaseClass.prototype.addEventListenerOnce = function (eventName) {\n        var _this = this;\n        return (function () {\n            if (instanceAvailability(_this) === true) {\n                return getPromise(function (resolve) {\n                    _this._objectInstance.one(eventName, function () {\n                        var args = [];\n                        for (var _i = 0; _i < arguments.length; _i++) {\n                            args[_i] = arguments[_i];\n                        }\n                        var newArgs = normalizeArgumentsOfEventListener.call(_this, _this._objectInstance, args);\n                        resolve(newArgs);\n                    });\n                });\n            }\n        })();\n    };\n    BaseClass.prototype.addListenerOnce = function (eventName) {\n        var _this = this;\n        return (function () {\n            if (instanceAvailability(_this) === true) {\n                console.warn('[GoogleMaps] \"addListenerOnce\" is deprecated. Please use \"addEventListenerOnce\".');\n                return _this.addEventListenerOnce(eventName);\n            }\n        })();\n    };\n    BaseClass.prototype.get = function (key) { return cordovaInstance(this, \"get\", { \"sync\": true }, arguments); };\n    BaseClass.prototype.set = function (key, value, noNotify) { return cordovaInstance(this, \"set\", { \"sync\": true }, arguments); };\n    BaseClass.prototype.bindTo = function (key, target, targetKey, noNotify) { return cordovaInstance(this, \"bindTo\", { \"sync\": true }, arguments); };\n    BaseClass.prototype.on = function (eventName) {\n        var _this = this;\n        return (function () {\n            if (instanceAvailability(_this) === true) {\n                return new Observable(function (observer) {\n                    _this._objectInstance.on(eventName, function () {\n                        var args = [];\n                        for (var _i = 0; _i < arguments.length; _i++) {\n                            args[_i] = arguments[_i];\n                        }\n                        var newArgs = normalizeArgumentsOfEventListener.call(_this, _this._objectInstance, args);\n                        observer.next(newArgs);\n                    });\n                });\n            }\n        })();\n    };\n    BaseClass.prototype.one = function (eventName) {\n        var _this = this;\n        return (function () {\n            if (instanceAvailability(_this) === true) {\n                return getPromise(function (resolve) {\n                    _this._objectInstance.one(eventName, function () {\n                        var args = [];\n                        for (var _i = 0; _i < arguments.length; _i++) {\n                            args[_i] = arguments[_i];\n                        }\n                        var newArgs = normalizeArgumentsOfEventListener.call(_this, _this._objectInstance, args);\n                        resolve(newArgs);\n                    });\n                });\n            }\n        })();\n    };\n    BaseClass.prototype.hasEventListener = function () { return cordovaInstance(this, \"hasEventListener\", { \"sync\": true }, arguments); };\n    BaseClass.prototype.empty = function () { return cordovaInstance(this, \"empty\", { \"sync\": true }, arguments); };\n    BaseClass.prototype.trigger = function (eventName) {\n        var parameters = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            parameters[_i - 1] = arguments[_i];\n        }\n        return cordovaInstance(this, \"trigger\", { \"sync\": true }, arguments);\n    };\n    BaseClass.prototype.destroy = function () { return cordovaInstance(this, \"destroy\", { \"sync\": true }, arguments); };\n    BaseClass.prototype.removeEventListener = function (eventName, listener) { return cordovaInstance(this, \"removeEventListener\", { \"sync\": true }, arguments); };\n    BaseClass.prototype.off = function (eventName, listener) { return cordovaInstance(this, \"off\", { \"sync\": true }, arguments); };\n    BaseClass.plugin = \"cordova-plugin-googlemaps\";\n    BaseClass.pluginName = \"GoogleMaps\";\n    BaseClass.pluginRef = \"plugin.google.maps.BaseClass\";\n    BaseClass.repo = \"\";\n    BaseClass = __decorate([\n        __metadata(\"design:paramtypes\", [Object])\n    ], BaseClass);\n    return BaseClass;\n}());\nexport { BaseClass };\nvar BaseArrayClass = /** @class */ (function (_super) {\n    __extends(BaseArrayClass, _super);\n    function BaseArrayClass(initialData) {\n        var _this = this;\n        if (initialData instanceof GoogleMaps.getPlugin().BaseArrayClass) {\n            _this = _super.call(this, initialData) || this;\n        }\n        else if (Array.isArray(initialData)) {\n            _this = _super.call(this, new (GoogleMaps.getPlugin().BaseArrayClass)(initialData)) || this;\n        }\n        else {\n            _this = _super.call(this, new (GoogleMaps.getPlugin().BaseArrayClass)([])) || this;\n        }\n        return _this;\n    }\n    BaseArrayClass.prototype.empty = function (noNotify) { return cordovaInstance(this, \"empty\", { \"sync\": true }, arguments); };\n    BaseArrayClass.prototype.forEach = function (fn) { return cordovaInstance(this, \"forEach\", { \"sync\": true }, arguments); };\n    /**\n     * Iterate over each element, calling the provided callback.\n     * @param fn {Function}\n     * @return {Promise<void>}\n     */\n    BaseArrayClass.prototype.forEachAsync = function (fn) {\n        var _this = this;\n        return getPromise(function (resolve) {\n            _this._objectInstance.forEach(fn, resolve);\n        });\n    };\n    BaseArrayClass.prototype.map = function (fn) { return cordovaInstance(this, \"map\", { \"sync\": true }, arguments); };\n    /**\n     * Iterate over each element, calling the provided callback.\n     * Then you can get the results of each callback.\n     * @param fn {Function}\n     * @param callback {Function}\n     * @return {Promise<any>} returns a new array with the results\n     */\n    BaseArrayClass.prototype.mapAsync = function (fn) {\n        var _this = this;\n        return getPromise(function (resolve) {\n            _this._objectInstance.map(fn, resolve);\n        });\n    };\n    /**\n     * Same as `mapAsync`, but keep the execution order\n     * @param fn {Function}\n     * @param callback {Function}\n     * @return {Promise<any>} returns a new array with the results\n     */\n    BaseArrayClass.prototype.mapSeries = function (fn) {\n        var _this = this;\n        return getPromise(function (resolve) {\n            _this._objectInstance.mapSeries(fn, resolve);\n        });\n    };\n    BaseArrayClass.prototype.filter = function (fn) { return cordovaInstance(this, \"filter\", { \"sync\": true }, arguments); };\n    /**\n     * The filterAsync() method creates a new array with all elements that pass the test implemented by the provided function.\n     * @param fn {Function}\n     * @param callback {Function}\n     * @return {Promise<T[]>} returns a new filtered array\n     */\n    BaseArrayClass.prototype.filterAsync = function (fn) {\n        var _this = this;\n        return getPromise(function (resolve) {\n            _this._objectInstance.filter(fn, resolve);\n        });\n    };\n    BaseArrayClass.prototype.getArray = function () { return cordovaInstance(this, \"getArray\", { \"sync\": true }, arguments); };\n    BaseArrayClass.prototype.getAt = function (index) { return cordovaInstance(this, \"getAt\", { \"sync\": true }, arguments); };\n    BaseArrayClass.prototype.getLength = function () { return cordovaInstance(this, \"getLength\", { \"sync\": true }, arguments); };\n    BaseArrayClass.prototype.indexOf = function (element) { return cordovaInstance(this, \"indexOf\", { \"sync\": true }, arguments); };\n    BaseArrayClass.prototype.reverse = function () { return cordovaInstance(this, \"reverse\", { \"sync\": true }, arguments); };\n    BaseArrayClass.prototype.sort = function () { return cordovaInstance(this, \"sort\", { \"sync\": true }, arguments); };\n    BaseArrayClass.prototype.insertAt = function (index, element, noNotify) { return cordovaInstance(this, \"insertAt\", { \"sync\": true }, arguments); };\n    BaseArrayClass.prototype.pop = function (noNotify) { return cordovaInstance(this, \"pop\", { \"sync\": true }, arguments); };\n    BaseArrayClass.prototype.push = function (element, noNotify) { return cordovaInstance(this, \"push\", { \"sync\": true }, arguments); };\n    BaseArrayClass.prototype.removeAt = function (index, noNotify) { return cordovaInstance(this, \"removeAt\", { \"sync\": true }, arguments); };\n    BaseArrayClass.prototype.setAt = function (index, element, noNotify) { return cordovaInstance(this, \"setAt\", { \"sync\": true }, arguments); };\n    BaseArrayClass.pluginName = \"BaseArrayClass\";\n    BaseArrayClass.plugin = \"cordova-plugin-googlemaps\";\n    BaseArrayClass.pluginRef = \"plugin.google.maps.BaseArrayClass\";\n    BaseArrayClass = __decorate([\n        __metadata(\"design:paramtypes\", [Object])\n    ], BaseArrayClass);\n    return BaseArrayClass;\n}(BaseClass));\nexport { BaseArrayClass };\nvar Circle = /** @class */ (function (_super) {\n    __extends(Circle, _super);\n    function Circle(_map, _objectInstance) {\n        var _this = _super.call(this, _objectInstance) || this;\n        _this._map = _map;\n        return _this;\n    }\n    Circle.prototype.getId = function () { return cordovaInstance(this, \"getId\", { \"sync\": true }, arguments); };\n    /**\n     * Returns the map instance.\n     * @return {GoogleMap}\n     */\n    Circle.prototype.getMap = function () {\n        return this._map;\n    };\n    Circle.prototype.setCenter = function (latLng) { return cordovaInstance(this, \"setCenter\", { \"sync\": true }, arguments); };\n    Circle.prototype.getCenter = function () { return cordovaInstance(this, \"getCenter\", { \"sync\": true }, arguments); };\n    Circle.prototype.getRadius = function () { return cordovaInstance(this, \"getRadius\", { \"sync\": true }, arguments); };\n    Circle.prototype.setRadius = function (radius) { return cordovaInstance(this, \"setRadius\", { \"sync\": true }, arguments); };\n    Circle.prototype.setFillColor = function (color) { return cordovaInstance(this, \"setFillColor\", { \"sync\": true }, arguments); };\n    Circle.prototype.getFillColor = function () { return cordovaInstance(this, \"getFillColor\", { \"sync\": true }, arguments); };\n    Circle.prototype.setStrokeWidth = function (strokeWidth) { return cordovaInstance(this, \"setStrokeWidth\", { \"sync\": true }, arguments); };\n    Circle.prototype.getStrokeWidth = function () { return cordovaInstance(this, \"getStrokeWidth\", { \"sync\": true }, arguments); };\n    Circle.prototype.setStrokeColor = function (strokeColor) { return cordovaInstance(this, \"setStrokeColor\", { \"sync\": true }, arguments); };\n    Circle.prototype.getStrokeColor = function () { return cordovaInstance(this, \"getStrokeColor\", { \"sync\": true }, arguments); };\n    Circle.prototype.setClickable = function (clickable) { return cordovaInstance(this, \"setClickable\", { \"sync\": true }, arguments); };\n    Circle.prototype.getClickable = function () { return cordovaInstance(this, \"getClickable\", { \"sync\": true }, arguments); };\n    Circle.prototype.setZIndex = function (zIndex) { return cordovaInstance(this, \"setZIndex\", { \"sync\": true }, arguments); };\n    Circle.prototype.getZIndex = function () { return cordovaInstance(this, \"getZIndex\", { \"sync\": true }, arguments); };\n    Circle.prototype.remove = function () { return cordovaInstance(this, \"remove\", {}, arguments); };\n    Circle.prototype.getBounds = function () { return cordovaInstance(this, \"getBounds\", { \"sync\": true }, arguments); };\n    Circle.prototype.setVisible = function (visible) { return cordovaInstance(this, \"setVisible\", { \"sync\": true }, arguments); };\n    Circle.prototype.getVisible = function () { return cordovaInstance(this, \"getVisible\", { \"sync\": true }, arguments); };\n    return Circle;\n}(BaseClass));\nexport { Circle };\nvar Environment = /** @class */ (function () {\n    function Environment() {\n    }\n    /**\n     * Set environment variables.\n     */\n    Environment.setEnv = function (envOptions) {\n        if (checkAvailability(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === false) {\n            throw new Error('cordova-plugin-googlemaps is not ready. Please use platform.ready() before accessing this method.');\n        }\n        GoogleMaps.getPlugin().environment.setEnv(envOptions);\n    };\n    /**\n     * Get the open source software license information for Google Maps SDK for iOS.\n     * @return {Promise<any>}\n     */\n    Environment.getLicenseInfo = function () {\n        if (checkAvailability(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === false) {\n            throw new Error('cordova-plugin-googlemaps is not ready. Please use platform.ready() before accessing this method.');\n        }\n        return getPromise(function (resolve) {\n            GoogleMaps.getPlugin().environment.getLicenseInfo(function (text) { return resolve(text); });\n        });\n    };\n    /**\n     * Specifies the background color of the app.\n     * @param color\n     */\n    Environment.setBackgroundColor = function (color) {\n        if (checkAvailability(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === false) {\n            throw new Error('cordova-plugin-googlemaps is not ready. Please use platform.ready() before accessing this method.');\n        }\n        GoogleMaps.getPlugin().environment.setBackgroundColor(color);\n    };\n    /**\n     * @deprecation This method is static. Please use Environment.getLicenseInfo()\n     * @hidden\n     */\n    Environment.prototype.getLicenseInfo = function () {\n        console.error('GoogleMaps', '[deprecated] This method is static. Please use Environment.getLicenseInfo()');\n        return Environment.getLicenseInfo();\n    };\n    /**\n     * @deprecation This method is static. Please use Environment.setBackgroundColor()\n     * @hidden\n     */\n    Environment.prototype.setBackgroundColor = function (color) {\n        console.error('GoogleMaps', '[deprecated] This method is static. Please use Environment.setBackgroundColor()');\n        Environment.setBackgroundColor(color);\n    };\n    Environment.plugin = \"cordova-plugin-googlemaps\";\n    Environment.pluginName = \"GoogleMaps\";\n    Environment.pluginRef = \"plugin.google.maps.environment\";\n    Environment.repo = \"\";\n    Environment = __decorate([], Environment);\n    return Environment;\n}());\nexport { Environment };\nvar Geocoder = /** @class */ (function () {\n    function Geocoder() {\n    }\n    /**\n     * @deprecation This method is static. Please use Geocoder.geocode()\n     * @hidden\n     */\n    Geocoder.prototype.geocode = function (request) {\n        console.error('GoogleMaps', '[deprecated] This method is static. Please use Geocoder.geocode()');\n        return Geocoder.geocode(request);\n    };\n    /**\n     * Converts position to address and vice versa\n     * @param {GeocoderRequest} request Request object with either an address or a position\n     * @return {Promise<GeocoderResult[] | BaseArrayClass<GeocoderResult>>}\n     */\n    Geocoder.geocode = function (request) {\n        if (checkAvailability(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === false) {\n            throw new Error('cordova-plugin-googlemaps is not ready. Please use platform.ready() before accessing this method.');\n        }\n        if (request.address instanceof Array || Array.isArray(request.address) ||\n            request.position instanceof Array || Array.isArray(request.position)) {\n            // -------------------------\n            // Geocoder.geocode({\n            //   address: [\n            //    \"Kyoto, Japan\",\n            //    \"Tokyo, Japan\"\n            //   ]\n            // })\n            // -------------------------\n            return getPromise(function (resolve, reject) {\n                GoogleMaps.getPlugin().Geocoder.geocode(request, function (mvcArray) {\n                    if (mvcArray) {\n                        resolve(new BaseArrayClass(mvcArray));\n                    }\n                    else {\n                        reject();\n                    }\n                });\n            });\n        }\n        else {\n            // -------------------------\n            // Geocoder.geocode({\n            //   address: \"Kyoto, Japan\"\n            // })\n            // -------------------------\n            return getPromise(function (resolve, reject) {\n                GoogleMaps.getPlugin().Geocoder.geocode(request, function (results) {\n                    if (results) {\n                        resolve(results);\n                    }\n                    else {\n                        reject();\n                    }\n                });\n            });\n        }\n    };\n    Geocoder.pluginName = \"GoogleMaps\";\n    Geocoder.pluginRef = \"plugin.google.maps.Geocoder\";\n    Geocoder.plugin = \"cordova-plugin-googlemaps\";\n    Geocoder.repo = \"\";\n    Geocoder = __decorate([], Geocoder);\n    return Geocoder;\n}());\nexport { Geocoder };\nvar LocationService = /** @class */ (function () {\n    function LocationService() {\n    }\n    /**\n     * Get the current device location without map\n     * @return {Promise<MyLocation>}\n     */\n    LocationService.getMyLocation = function (options) {\n        if (checkAvailability(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === false) {\n            throw new Error('cordova-plugin-googlemaps is not ready. Please use platform.ready() before accessing this method.');\n        }\n        return getPromise(function (resolve, reject) {\n            GoogleMaps.getPlugin().LocationService.getMyLocation(options, resolve, reject);\n        });\n    };\n    /**\n     * Return true if the application has geolocation permission\n     * @return {Promise<boolean>}\n     */\n    LocationService.hasPermission = function () {\n        if (checkAvailability(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === false) {\n            throw new Error('cordova-plugin-googlemaps is not ready. Please use platform.ready() before accessing this method.');\n        }\n        return getPromise(function (resolve, reject) {\n            GoogleMaps.getPlugin().LocationService.hasPermission(resolve, reject);\n        });\n    };\n    LocationService.pluginName = \"GoogleMaps\";\n    LocationService.pluginRef = \"plugin.google.maps.LocationService\";\n    LocationService.plugin = \"cordova-plugin-googlemaps\";\n    LocationService.repo = \"\";\n    LocationService = __decorate([], LocationService);\n    return LocationService;\n}());\nexport { LocationService };\nvar Encoding = /** @class */ (function () {\n    function Encoding() {\n    }\n    /**\n     * Decodes an encoded path string into a sequence of LatLngs.\n     * @param encoded {string} an encoded path string\n     * @param precision? {number} default: 5\n     * @return {LatLng}\n     */\n    Encoding.decodePath = function (encoded, precision) {\n        if (checkAvailability(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === false) {\n            throw new Error('cordova-plugin-googlemaps is not ready. Please use platform.ready() before accessing this method.');\n        }\n        return GoogleMaps.getPlugin().encoding.decodePath(encoded, precision);\n    };\n    /**\n     * Encodes a sequence of LatLngs into an encoded path string.\n     * @param path {ILatLng[] | BaseArrayClass<ILatLng>} a sequence of LatLngs\n     * @return {string}\n     */\n    Encoding.encodePath = function (path) {\n        if (checkAvailability(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === false) {\n            throw new Error('cordova-plugin-googlemaps is not ready. Please use platform.ready() before accessing this method.');\n        }\n        return GoogleMaps.getPlugin().encoding.encodePath(path);\n    };\n    /**\n     * @deprecation This method is static. Please use Encoding.decodePath()\n     * @hidden\n     */\n    Encoding.prototype.decodePath = function (encoded, precision) {\n        console.error('GoogleMaps', '[deprecated] This method is static. Please use Encoding.decodePath()');\n        return Encoding.decodePath(encoded, precision);\n    };\n    /**\n     * @deprecation This method is static. Please use Encoding.encodePath()\n     * @hidden\n     */\n    Encoding.prototype.encodePath = function (path) {\n        console.error('GoogleMaps', '[deprecated] This method is static. Please use Encoding.encodePath()');\n        return Encoding.encodePath(path);\n    };\n    Encoding.pluginName = \"GoogleMaps\";\n    Encoding.pluginRef = \"plugin.google.maps.geometry.encoding\";\n    Encoding.plugin = \"cordova-plugin-googlemaps\";\n    Encoding.repo = \"\";\n    Encoding = __decorate([], Encoding);\n    return Encoding;\n}());\nexport { Encoding };\nvar Poly = /** @class */ (function () {\n    function Poly() {\n    }\n    /**\n     * Returns true if the specified location is in the polygon path\n     * @param location {ILatLng}\n     * @param path {ILatLng[]}\n     * @return {boolean}\n     */\n    Poly.containsLocation = function (location, path) {\n        if (checkAvailability(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === false) {\n            throw new Error('cordova-plugin-googlemaps is not ready. Please use platform.ready() before accessing this method.');\n        }\n        return GoogleMaps.getPlugin().geometry.poly.containsLocation(location, path);\n    };\n    /**\n     * Returns true if the specified location is on the polyline path\n     * @param location {ILatLng}\n     * @param path {ILatLng[]}\n     * @return {boolean}\n     */\n    Poly.isLocationOnEdge = function (location, path) {\n        if (checkAvailability(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === false) {\n            throw new Error('cordova-plugin-googlemaps is not ready. Please use platform.ready() before accessing this method.');\n        }\n        return GoogleMaps.getPlugin().geometry.poly.isLocationOnEdge(location, path);\n    };\n    Poly.pluginName = \"GoogleMaps\";\n    Poly.pluginRef = \"plugin.google.maps.geometry.poly\";\n    Poly.plugin = \"cordova-plugin-googlemaps\";\n    Poly.repo = \"\";\n    Poly = __decorate([], Poly);\n    return Poly;\n}());\nexport { Poly };\nvar Spherical = /** @class */ (function () {\n    function Spherical() {\n    }\n    /**\n     * Returns the distance, in meters, between two LatLngs.\n     * @param locationA {ILatLng}\n     * @param locationB {ILatLng}\n     * @return {number}\n     */\n    Spherical.computeDistanceBetween = function (from, to) {\n        if (checkAvailability(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === false) {\n            throw new Error('cordova-plugin-googlemaps is not ready. Please use platform.ready() before accessing this method.');\n        }\n        return GoogleMaps.getPlugin().geometry.spherical.computeDistanceBetween(from, to);\n    };\n    /**\n     * Returns the LatLng resulting from moving a distance from an origin in the specified heading (expressed in degrees clockwise from north)\n     * @param from {ILatLng}\n     * @param distance {number}\n     * @param heading {number}\n     * @return {LatLng}\n     */\n    Spherical.computeOffset = function (from, distance, heading) {\n        if (checkAvailability(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === false) {\n            throw new Error('cordova-plugin-googlemaps is not ready. Please use platform.ready() before accessing this method.');\n        }\n        return GoogleMaps.getPlugin().geometry.spherical.computeOffset(from, distance, heading);\n    };\n    /**\n     * Returns the location of origin when provided with a LatLng destination, meters travelled and original heading. Headings are expressed in degrees clockwise from North. This function returns null when no solution is available.\n     * @param to {ILatLng} The destination LatLng.\n     * @param distance {number} The distance travelled, in meters.\n     * @param heading {number} The heading in degrees clockwise from north.\n     * @return {LatLng}\n     */\n    Spherical.computeOffsetOrigin = function (to, distance, heading) {\n        if (checkAvailability(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === false) {\n            throw new Error('cordova-plugin-googlemaps is not ready. Please use platform.ready() before accessing this method.');\n        }\n        return GoogleMaps.getPlugin().geometry.spherical.computeOffsetOrigin(to, distance, heading);\n    };\n    /**\n     * Returns the length of the given path.\n     * @param path {ILatLng[] | BaseArrayClass<ILatLng>}\n     * @return {number}\n     */\n    Spherical.computeLength = function (path) {\n        if (checkAvailability(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === false) {\n            throw new Error('cordova-plugin-googlemaps is not ready. Please use platform.ready() before accessing this method.');\n        }\n        return GoogleMaps.getPlugin().geometry.spherical.computeLength(path);\n    };\n    /**\n     * Returns the area of a closed path. The computed area uses the same units as the radius.\n     * @param path {ILatLng[] | BaseArrayClass<ILatLng>}.\n     * @return {number}\n     */\n    Spherical.computeArea = function (path) {\n        if (checkAvailability(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === false) {\n            throw new Error('cordova-plugin-googlemaps is not ready. Please use platform.ready() before accessing this method.');\n        }\n        return GoogleMaps.getPlugin().geometry.spherical.computeLength(path);\n    };\n    /**\n     * Returns the signed area of a closed path. The signed area may be used to determine the orientation of the path.\n     * @param path {ILatLng[] | BaseArrayClass<ILatLng>}.\n     * @return {number}\n     */\n    Spherical.computeSignedArea = function (path) {\n        if (checkAvailability(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === false) {\n            throw new Error('cordova-plugin-googlemaps is not ready. Please use platform.ready() before accessing this method.');\n        }\n        return GoogleMaps.getPlugin().geometry.spherical.computeSignedArea(path);\n    };\n    /**\n     * Returns the heading from one LatLng to another LatLng. Headings are expressed in degrees clockwise from North within the range (-180,180).\n     * @param from {ILatLng}\n     * @param to {ILatLng}\n     * @return {number}\n     */\n    Spherical.computeHeading = function (from, to) {\n        if (checkAvailability(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === false) {\n            throw new Error('cordova-plugin-googlemaps is not ready. Please use platform.ready() before accessing this method.');\n        }\n        return GoogleMaps.getPlugin().geometry.spherical.computeHeading(from, to);\n    };\n    /**\n     * Returns the LatLng which lies the given fraction of the way between the origin LatLng and the destination LatLng.\n     * @param from {ILatLng}     The LatLng from which to start.\n     * @param to {ILatLng}       The LatLng toward which to travel.\n     * @param fraction {number}  A fraction of the distance to travel from 0.0 to 1.0 .\n     * @return {LatLng}\n     */\n    Spherical.interpolate = function (from, to, fraction) {\n        if (checkAvailability(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === false) {\n            throw new Error('cordova-plugin-googlemaps is not ready. Please use platform.ready() before accessing this method.');\n        }\n        return GoogleMaps.getPlugin().geometry.spherical.interpolate(from, to, fraction);\n    };\n    /**\n     * @deprecation This method is static. Please use Spherical.computeDistanceBetween()\n     * @hidden\n     */\n    Spherical.prototype.computeDistanceBetween = function (from, to) {\n        console.error('GoogleMaps', '[deprecated] This method is static. Please use Spherical.computeDistanceBetween()');\n        return Spherical.computeDistanceBetween(from, to);\n    };\n    /**\n     * @deprecation This method is static. Please use Spherical.computeOffset()\n     * @hidden\n     */\n    Spherical.prototype.computeOffset = function (from, distance, heading) {\n        console.error('GoogleMaps', '[deprecated] This method is static. Please use Spherical.computeOffset()');\n        return Spherical.computeOffset(from, distance, heading);\n    };\n    /**\n     * @deprecation This method is static. Please use Spherical.computeOffsetOrigin()\n     * @hidden\n     */\n    Spherical.prototype.computeOffsetOrigin = function (to, distance, heading) {\n        console.error('GoogleMaps', '[deprecated] This method is static. Please use Spherical.computeOffsetOrigin()');\n        return Spherical.computeOffsetOrigin(to, distance, heading);\n    };\n    /**\n     * @deprecation This method is static. Please use Spherical.computeLength()\n     * @hidden\n     */\n    Spherical.prototype.computeLength = function (path) {\n        console.error('GoogleMaps', '[deprecated] This method is static. Please use Spherical.computeLength()');\n        return Spherical.computeLength(path);\n    };\n    /**\n     * @deprecation This method is static. Please use Spherical.computeArea()\n     * @hidden\n     */\n    Spherical.prototype.computeArea = function (path) {\n        console.error('GoogleMaps', '[deprecated] This method is static. Please use Spherical.computeArea()');\n        return Spherical.computeArea(path);\n    };\n    /**\n     * @deprecation This method is static. Please use Spherical.computeSignedArea()\n     * @hidden\n     */\n    Spherical.prototype.computeSignedArea = function (path) {\n        console.error('GoogleMaps', '[deprecated] This method is static. Please use Spherical.computeSignedArea()');\n        return Spherical.computeSignedArea(path);\n    };\n    /**\n     * @deprecation This method is static. Please use Spherical.computeHeading()\n     * @hidden\n     */\n    Spherical.prototype.computeHeading = function (from, to) {\n        console.error('GoogleMaps', '[deprecated] This method is static. Please use Spherical.computeHeading()');\n        return Spherical.computeHeading(from, to);\n    };\n    /**\n     * @deprecation This method is static. Please use Spherical.interpolate()\n     * @hidden\n     */\n    Spherical.prototype.interpolate = function (from, to, fraction) {\n        console.error('GoogleMaps', '[deprecated] This method is static. Please use Spherical.interpolate()');\n        return Spherical.interpolate(from, to, fraction);\n    };\n    Spherical.pluginName = \"GoogleMaps\";\n    Spherical.pluginRef = \"plugin.google.maps.geometry.spherical\";\n    Spherical.plugin = \"cordova-plugin-googlemaps\";\n    Spherical.repo = \"\";\n    Spherical = __decorate([], Spherical);\n    return Spherical;\n}());\nexport { Spherical };\nvar StreetViewPanorama = /** @class */ (function (_super) {\n    __extends(StreetViewPanorama, _super);\n    function StreetViewPanorama(element, options) {\n        var _this = this;\n        if (checkAvailability(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === true) {\n            // -------------------\n            // Create a panorama\n            // -------------------\n            if (element instanceof HTMLElement) {\n                if (element.offsetWidth >= 100 && element.offsetHeight >= 100) {\n                    _this = _super.call(this, GoogleMaps.getPlugin().StreetView.getPanorama(element, options)) || this;\n                }\n                else {\n                    throw new Error(element.tagName + ' is too small. Must be bigger than 100x100.');\n                }\n            }\n            else if (typeof element === 'string') {\n                _this = _super.call(this, GoogleMaps.getPlugin().StreetView.getPanorama(getPromise(function (resolve, reject) {\n                    var count;\n                    var i;\n                    count = 0;\n                    var timer = setInterval(function () {\n                        var targets;\n                        for (i = 0; i < TARGET_ELEMENT_FINDING_QUERYS.length; i++) {\n                            targets = Array.from(document.querySelectorAll(TARGET_ELEMENT_FINDING_QUERYS[i] + element));\n                            if (targets.length > 0) {\n                                targets = targets.filter(function (target) {\n                                    return !target.hasAttribute('__pluginmapid');\n                                });\n                            }\n                            if (targets.length === 1 && targets[0] && targets[0].offsetWidth >= 100 && targets[0].offsetHeight >= 100) {\n                                clearInterval(timer);\n                                resolve([targets[0], options]);\n                                return;\n                            }\n                        }\n                        if (count++ < 20) {\n                            return;\n                        }\n                        clearInterval(timer);\n                        _this._objectInstance.remove();\n                        if (targets.length > 0 && targets[0] && targets[0].offsetWidth < 100 || targets[0].offsetHeight < 100) {\n                            reject(new Error(targets[0].tagName + '[#' + element + '] is too small. Must be bigger than 100x100.'));\n                        }\n                        else {\n                            if (targets.length > 1) {\n                                reject(new Error('There are multiple \"' + element + '\" elements. Use different id to prevent error.'));\n                            }\n                            else {\n                                reject(new Error('Can not find the element [#' + element + ']'));\n                            }\n                        }\n                    }, 100);\n                }), options)) || this;\n            }\n        }\n        else {\n            var errorMessage = [\n                '[GoogleMaps]'\n            ];\n            if (!window.cordova) {\n                errorMessage.push('You need to execute \"$> ionic cordova run browser\".');\n                errorMessage.push('\"$> ionic serve\" is not supported.');\n            }\n            else {\n                errorMessage.push('cordova-plugin-googlemaps is not installed or not ready yet.');\n            }\n            if (element instanceof HTMLElement) {\n                displayErrorMessage(element, errorMessage.join('<br />'));\n            }\n            else if (typeof element === 'string') {\n                var targets = Array.from(document.querySelectorAll('#' + element));\n                if (targets.length > 0) {\n                    targets = targets.filter(function (target) {\n                        return !target.hasAttribute('__pluginmapid');\n                    });\n                }\n                if (targets.length === 1 && targets[0]) {\n                    displayErrorMessage(targets[0], errorMessage.join('<br />'));\n                }\n            }\n            throw new Error(errorMessage.join(''));\n        }\n        return _this;\n    }\n    StreetViewPanorama.prototype.setPov = function (pov) { return cordovaInstance(this, \"setPov\", {}, arguments); };\n    StreetViewPanorama.prototype.setPosition = function (cameraPosition) { return cordovaInstance(this, \"setPosition\", {}, arguments); };\n    StreetViewPanorama.prototype.setPanningGesturesEnabled = function (gestureEnable) { return cordovaInstance(this, \"setPanningGesturesEnabled\", { \"sync\": true }, arguments); };\n    StreetViewPanorama.prototype.getPanningGesturesEnabled = function () { return cordovaInstance(this, \"getPanningGesturesEnabled\", { \"sync\": true }, arguments); };\n    StreetViewPanorama.prototype.setZoomGesturesEnabled = function (gestureEnable) { return cordovaInstance(this, \"setZoomGesturesEnabled\", { \"sync\": true }, arguments); };\n    StreetViewPanorama.prototype.getZoomGesturesEnabled = function () { return cordovaInstance(this, \"getZoomGesturesEnabled\", { \"sync\": true }, arguments); };\n    StreetViewPanorama.prototype.setStreetNamesEnabled = function (gestureEnable) { return cordovaInstance(this, \"setStreetNamesEnabled\", { \"sync\": true }, arguments); };\n    StreetViewPanorama.prototype.getStreetNamesEnabled = function () { return cordovaInstance(this, \"getStreetNamesEnabled\", { \"sync\": true }, arguments); };\n    StreetViewPanorama.prototype.setNavigationEnabled = function (gestureEnable) { return cordovaInstance(this, \"setNavigationEnabled\", { \"sync\": true }, arguments); };\n    StreetViewPanorama.prototype.getNavigationEnabled = function () { return cordovaInstance(this, \"getNavigationEnabled\", { \"sync\": true }, arguments); };\n    StreetViewPanorama.prototype.getLinks = function () { return cordovaInstance(this, \"getLinks\", { \"sync\": true }, arguments); };\n    StreetViewPanorama.prototype.getLocation = function () { return cordovaInstance(this, \"getLocation\", { \"sync\": true }, arguments); };\n    StreetViewPanorama.prototype.getPanoId = function () { return cordovaInstance(this, \"getPanoId\", { \"sync\": true }, arguments); };\n    StreetViewPanorama.prototype.getPosition = function () { return cordovaInstance(this, \"getPosition\", { \"sync\": true }, arguments); };\n    StreetViewPanorama.prototype.remove = function () { return cordovaInstance(this, \"remove\", {}, arguments); };\n    var _a, _b;\n    StreetViewPanorama.pluginName = \"StreetViewPanorama\";\n    StreetViewPanorama.plugin = \"cordova-plugin-googlemaps\";\n    StreetViewPanorama = __decorate([\n        __metadata(\"design:paramtypes\", [Object, typeof (_b = typeof StreetViewOptions !== \"undefined\" && StreetViewOptions) === \"function\" ? _b : Object])\n    ], StreetViewPanorama);\n    return StreetViewPanorama;\n}(BaseClass));\nexport { StreetViewPanorama };\nvar GoogleMap = /** @class */ (function (_super) {\n    __extends(GoogleMap, _super);\n    function GoogleMap(element, options, __timeout) {\n        var _this = this;\n        if (checkAvailability(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === true) {\n            // ---------------\n            // Create a map\n            // ---------------\n            if (element instanceof HTMLElement) {\n                if (!element.offsetParent) {\n                    throw new Error('Element must be under <body>');\n                }\n                if (element.offsetWidth >= 100 && element.offsetHeight >= 100) {\n                    _this = _super.call(this, GoogleMaps.getPlugin().Map.getMap(element, options)) || this;\n                }\n                else {\n                    throw new Error(element.tagName + ' is too small. Must be bigger than 100x100.');\n                }\n            }\n            else if (typeof element === 'string') {\n                _this = _super.call(this, GoogleMaps.getPlugin().Map.getMap(getPromise(function (resolve, reject) {\n                    var count;\n                    var i;\n                    count = 0;\n                    var timer = setInterval(function () {\n                        var targets;\n                        for (i = 0; i < TARGET_ELEMENT_FINDING_QUERYS.length; i++) {\n                            targets = Array.from(document.querySelectorAll(TARGET_ELEMENT_FINDING_QUERYS[i] + element));\n                            if (targets.length > 0) {\n                                targets = targets.filter(function (target) {\n                                    return !target.hasAttribute('__pluginmapid');\n                                });\n                            }\n                            if (targets.length === 1 && targets[0] && targets[0].offsetWidth >= 100 && targets[0].offsetHeight >= 100) {\n                                clearInterval(timer);\n                                resolve([targets[0], options]);\n                                return;\n                            }\n                        }\n                        if (count++ < 20) {\n                            return;\n                        }\n                        clearInterval(timer);\n                        _this._objectInstance.remove();\n                        if (targets.length > 0 && targets[0] && targets[0].offsetWidth < 100 || targets[0].offsetHeight < 100) {\n                            reject(new Error(targets[0].tagName + '[#' + element + '] is too small. Must be bigger than 100x100.'));\n                        }\n                        else {\n                            if (targets.length > 1) {\n                                reject(new Error('There are multiple \"' + element + '\" elements. Use different id to prevent error.'));\n                            }\n                            else {\n                                reject(new Error('Can not find the element [#' + element + ']'));\n                            }\n                        }\n                    }, __timeout == null ? 100 : __timeout);\n                }), options)) || this;\n            }\n            else if (element === null && options) {\n                _this = _super.call(this, GoogleMaps.getPlugin().Map.getMap(null, options)) || this;\n            }\n        }\n        else {\n            var errorMessage = [\n                '[GoogleMaps]'\n            ];\n            if (!window.cordova) {\n                errorMessage.push('You need to execute \"$> ionic cordova run browser\".');\n                errorMessage.push('\"$> ionic serve\" is not supported.');\n            }\n            else {\n                errorMessage.push('cordova-plugin-googlemaps is not installed or not ready yet.');\n            }\n            console.error(errorMessage.join(''));\n            if (element instanceof HTMLElement) {\n                displayErrorMessage(element, errorMessage.join('<br />'));\n            }\n            else if (typeof element === 'string') {\n                var targets = Array.from(document.querySelectorAll('#' + element));\n                if (targets.length > 0) {\n                    targets = targets.filter(function (target) {\n                        return !target.hasAttribute('__pluginmapid');\n                    });\n                }\n                if (targets.length === 1 && targets[0]) {\n                    displayErrorMessage(targets[0], errorMessage.join('<br />'));\n                }\n            }\n        }\n        return _this;\n    }\n    GoogleMap.prototype.setDiv = function (domNode) {\n        var _this = this;\n        return (function () {\n            if (instanceAvailability(_this) === true) {\n                if (!domNode) {\n                    _this._objectInstance.setDiv();\n                    return;\n                }\n                if (typeof domNode === 'string') {\n                    (getPromise(function (resolve, reject) {\n                        var i, targets;\n                        for (i = 0; i < TARGET_ELEMENT_FINDING_QUERYS.length; i++) {\n                            targets = Array.from(document.querySelectorAll(TARGET_ELEMENT_FINDING_QUERYS[i] + domNode));\n                            if (targets.length > 0) {\n                                targets = targets.filter(function (target) {\n                                    return !target.hasAttribute('__pluginmapid');\n                                });\n                            }\n                            if (targets.length === 1 && targets[0] && targets[0].offsetWidth >= 100 && targets[0].offsetHeight >= 100) {\n                                resolve(targets[0]);\n                                return;\n                            }\n                        }\n                        reject('Can not find [#' + domNode + '] element');\n                    }))\n                        .then(function (element) {\n                        _this._objectInstance.setDiv(element);\n                    });\n                }\n                else {\n                    if (domNode instanceof HTMLElement &&\n                        !domNode.offsetParent &&\n                        domNode.offsetWidth >= 100 && domNode.offsetHeight >= 100) {\n                        _this._objectInstance.setDiv(domNode);\n                    }\n                    else {\n                        throw new Error(domNode.tagName + ' is too small. Must be bigger than 100x100.');\n                    }\n                }\n            }\n        })();\n    };\n    GoogleMap.prototype.getDiv = function () { return cordovaInstance(this, \"getDiv\", { \"sync\": true }, arguments); };\n    GoogleMap.prototype.setMapTypeId = function (mapTypeId) { return cordovaInstance(this, \"setMapTypeId\", { \"sync\": true }, arguments); };\n    GoogleMap.prototype.animateCamera = function (cameraPosition) { return cordovaInstance(this, \"animateCamera\", {}, arguments); };\n    GoogleMap.prototype.animateCameraZoomIn = function () { return cordovaInstance(this, \"animateCameraZoomIn\", {}, arguments); };\n    GoogleMap.prototype.animateCameraZoomOut = function () { return cordovaInstance(this, \"animateCameraZoomOut\", {}, arguments); };\n    GoogleMap.prototype.moveCamera = function (cameraPosition) { return cordovaInstance(this, \"moveCamera\", {}, arguments); };\n    GoogleMap.prototype.moveCameraZoomIn = function () { return cordovaInstance(this, \"moveCameraZoomIn\", {}, arguments); };\n    GoogleMap.prototype.moveCameraZoomOut = function () { return cordovaInstance(this, \"moveCameraZoomOut\", {}, arguments); };\n    GoogleMap.prototype.getCameraPosition = function () { return cordovaInstance(this, \"getCameraPosition\", { \"sync\": true }, arguments); };\n    GoogleMap.prototype.getCameraTarget = function () { return cordovaInstance(this, \"getCameraTarget\", { \"sync\": true }, arguments); };\n    GoogleMap.prototype.getCameraZoom = function () { return cordovaInstance(this, \"getCameraZoom\", { \"sync\": true }, arguments); };\n    GoogleMap.prototype.getCameraBearing = function () { return cordovaInstance(this, \"getCameraBearing\", { \"sync\": true }, arguments); };\n    GoogleMap.prototype.getCameraTilt = function () { return cordovaInstance(this, \"getCameraTilt\", { \"sync\": true }, arguments); };\n    GoogleMap.prototype.setCameraTarget = function (latLng) { return cordovaInstance(this, \"setCameraTarget\", { \"sync\": true }, arguments); };\n    GoogleMap.prototype.setCameraZoom = function (zoomLevel) { return cordovaInstance(this, \"setCameraZoom\", { \"sync\": true }, arguments); };\n    GoogleMap.prototype.setCameraTilt = function (tiltAngle) { return cordovaInstance(this, \"setCameraTilt\", { \"sync\": true }, arguments); };\n    GoogleMap.prototype.setCameraBearing = function (bearing) { return cordovaInstance(this, \"setCameraBearing\", { \"sync\": true }, arguments); };\n    GoogleMap.prototype.panBy = function (x, y) { return cordovaInstance(this, \"panBy\", { \"sync\": true }, arguments); };\n    GoogleMap.prototype.getVisibleRegion = function () { return cordovaInstance(this, \"getVisibleRegion\", { \"sync\": true }, arguments); };\n    GoogleMap.prototype.getMyLocation = function (options) { return cordovaInstance(this, \"getMyLocation\", {}, arguments); };\n    GoogleMap.prototype.setClickable = function (isClickable) { return cordovaInstance(this, \"setClickable\", { \"sync\": true }, arguments); };\n    GoogleMap.prototype.remove = function () { return cordovaInstance(this, \"remove\", {}, arguments); };\n    GoogleMap.prototype.clear = function () {\n        var _this = this;\n        return (function () {\n            if (instanceAvailability(_this) === true) {\n                if (_this.get('_overlays')) {\n                    Object.keys(_this.get('_overlays')).forEach(function (overlayId) {\n                        _this.get('_overlays')[overlayId] = null;\n                        delete _this.get('_overlays')[overlayId];\n                    });\n                }\n                return getPromise(function (resolve) {\n                    _this._objectInstance.clear(function () { return resolve(); });\n                });\n            }\n        })();\n    };\n    GoogleMap.prototype.fromLatLngToPoint = function (latLng) { return cordovaInstance(this, \"fromLatLngToPoint\", {}, arguments); };\n    GoogleMap.prototype.fromPointToLatLng = function (point) { return cordovaInstance(this, \"fromPointToLatLng\", {}, arguments); };\n    GoogleMap.prototype.setMyLocationEnabled = function (enabled) { return cordovaInstance(this, \"setMyLocationEnabled\", { \"sync\": true }, arguments); };\n    GoogleMap.prototype.setMyLocationButtonEnabled = function (enabled) { return cordovaInstance(this, \"setMyLocationButtonEnabled\", { \"sync\": true }, arguments); };\n    GoogleMap.prototype.getFocusedBuilding = function () { return cordovaInstance(this, \"getFocusedBuilding\", {}, arguments); };\n    GoogleMap.prototype.setIndoorEnabled = function (enabled) { return cordovaInstance(this, \"setIndoorEnabled\", { \"sync\": true }, arguments); };\n    GoogleMap.prototype.setTrafficEnabled = function (enabled) { return cordovaInstance(this, \"setTrafficEnabled\", { \"sync\": true }, arguments); };\n    GoogleMap.prototype.setCompassEnabled = function (enabled) { return cordovaInstance(this, \"setCompassEnabled\", { \"sync\": true }, arguments); };\n    GoogleMap.prototype.setAllGesturesEnabled = function (enabled) { return cordovaInstance(this, \"setAllGesturesEnabled\", { \"sync\": true }, arguments); };\n    GoogleMap.prototype.setVisible = function (visible) { return cordovaInstance(this, \"setVisible\", { \"sync\": true }, arguments); };\n    GoogleMap.prototype.setPadding = function (top, right, bottom, left) { return cordovaInstance(this, \"setPadding\", { \"sync\": true }, arguments); };\n    GoogleMap.prototype.setOptions = function (options) { return cordovaInstance(this, \"setOptions\", { \"sync\": true }, arguments); };\n    GoogleMap.prototype.addMarker = function (options) {\n        var _this = this;\n        return (function () {\n            if (instanceAvailability(_this) === true) {\n                return getPromise(function (resolve, reject) {\n                    _this._objectInstance.addMarker(options, function (marker) {\n                        if (marker) {\n                            var overlayId_1 = marker.getId();\n                            var overlay_1 = new Marker(_this, marker);\n                            _this.get('_overlays')[overlayId_1] = overlay_1;\n                            marker.one(overlayId_1 + '_remove', function () {\n                                if (_this.get('_overlays')) {\n                                    _this.get('_overlays')[overlayId_1] = null;\n                                    overlay_1.destroy();\n                                }\n                            });\n                            resolve(overlay_1);\n                        }\n                        else {\n                            reject();\n                        }\n                    });\n                });\n            }\n        })();\n    };\n    GoogleMap.prototype.addMarkerSync = function (options) {\n        var _this = this;\n        return (function () {\n            if (instanceAvailability(_this) === true) {\n                var marker = _this._objectInstance.addMarker(options);\n                var overlayId = marker.getId();\n                var overlay = new Marker(_this, marker);\n                _this.get('_overlays')[overlayId] = overlay;\n                marker.one(overlayId + '_remove', function () {\n                    if (_this.get('_overlays')) {\n                        _this.get('_overlays')[overlayId] = null;\n                        overlay.destroy();\n                    }\n                });\n                return overlay;\n            }\n        })();\n    };\n    GoogleMap.prototype.addMarkerCluster = function (options) {\n        var _this = this;\n        return (function () {\n            if (instanceAvailability(_this) === true) {\n                return getPromise(function (resolve, reject) {\n                    _this._objectInstance.addMarkerCluster(options, function (markerCluster) {\n                        if (markerCluster) {\n                            var overlayId_2 = markerCluster.getId();\n                            var overlay_2 = new MarkerCluster(_this, markerCluster);\n                            _this.get('_overlays')[overlayId_2] = overlay_2;\n                            markerCluster.one('remove', function () {\n                                if (_this.get('_overlays')) {\n                                    _this.get('_overlays')[overlayId_2] = null;\n                                    overlay_2.destroy();\n                                }\n                            });\n                            markerCluster.set('_overlays', new BaseArrayClass());\n                            resolve(overlay_2);\n                        }\n                        else {\n                            reject();\n                        }\n                    });\n                });\n            }\n        })();\n    };\n    GoogleMap.prototype.addMarkerClusterSync = function (options) {\n        var _this = this;\n        return (function () {\n            if (instanceAvailability(_this) === true) {\n                var markerCluster = _this._objectInstance.addMarkerCluster(options);\n                var overlayId = markerCluster.getId();\n                var overlay = new MarkerCluster(_this, markerCluster);\n                _this.get('_overlays')[overlayId] = overlay;\n                markerCluster.one(overlayId + '_remove', function () {\n                    if (_this.get('_overlays')) {\n                        _this.get('_overlays')[overlayId] = null;\n                        overlay.destroy();\n                    }\n                });\n                markerCluster.set('_overlays', new BaseArrayClass());\n                return overlay;\n            }\n        })();\n    };\n    GoogleMap.prototype.addCircle = function (options) {\n        var _this = this;\n        return (function () {\n            if (instanceAvailability(_this) === true) {\n                return getPromise(function (resolve, reject) {\n                    _this._objectInstance.addCircle(options, function (circle) {\n                        if (circle) {\n                            var overlayId_3 = circle.getId();\n                            var overlay_3 = new Circle(_this, circle);\n                            _this.get('_overlays')[overlayId_3] = overlay_3;\n                            circle.one(overlayId_3 + '_remove', function () {\n                                if (_this.get('_overlays')) {\n                                    _this.get('_overlays')[overlayId_3] = null;\n                                    overlay_3.destroy();\n                                }\n                            });\n                            resolve(overlay_3);\n                        }\n                        else {\n                            reject();\n                        }\n                    });\n                });\n            }\n        })();\n    };\n    GoogleMap.prototype.addCircleSync = function (options) {\n        var _this = this;\n        return (function () {\n            if (instanceAvailability(_this) === true) {\n                var circle = _this._objectInstance.addCircle(options);\n                var overlayId = circle.getId();\n                var overlay = new Circle(_this, circle);\n                _this.get('_overlays')[overlayId] = overlay;\n                circle.one(overlayId + '_remove', function () {\n                    if (_this.get('_overlays')) {\n                        _this.get('_overlays')[overlayId] = null;\n                        overlay.destroy();\n                    }\n                });\n                return overlay;\n            }\n        })();\n    };\n    GoogleMap.prototype.addPolygon = function (options) {\n        var _this = this;\n        return (function () {\n            if (instanceAvailability(_this) === true) {\n                return getPromise(function (resolve, reject) {\n                    _this._objectInstance.addPolygon(options, function (polygon) {\n                        if (polygon) {\n                            var overlayId_4 = polygon.getId();\n                            var overlay_4 = new Polygon(_this, polygon);\n                            _this.get('_overlays')[overlayId_4] = overlay_4;\n                            polygon.one(overlayId_4 + '_remove', function () {\n                                if (_this.get('_overlays')) {\n                                    _this.get('_overlays')[overlayId_4] = null;\n                                    overlay_4.destroy();\n                                }\n                            });\n                            resolve(overlay_4);\n                        }\n                        else {\n                            reject();\n                        }\n                    });\n                });\n            }\n        })();\n    };\n    GoogleMap.prototype.addPolygonSync = function (options) {\n        var _this = this;\n        return (function () {\n            if (instanceAvailability(_this) === true) {\n                var polygon = _this._objectInstance.addPolygon(options);\n                var overlayId = polygon.getId();\n                var overlay = new Polygon(_this, polygon);\n                _this.get('_overlays')[overlayId] = overlay;\n                polygon.one(overlayId + '_remove', function () {\n                    if (_this.get('_overlays')) {\n                        _this.get('_overlays')[overlayId] = null;\n                        overlay.destroy();\n                    }\n                });\n                return overlay;\n            }\n        })();\n    };\n    GoogleMap.prototype.addPolyline = function (options) {\n        var _this = this;\n        return (function () {\n            if (instanceAvailability(_this) === true) {\n                return getPromise(function (resolve, reject) {\n                    _this._objectInstance.addPolyline(options, function (polyline) {\n                        if (polyline) {\n                            var overlayId_5 = polyline.getId();\n                            var overlay_5 = new Polyline(_this, polyline);\n                            _this.get('_overlays')[overlayId_5] = overlay_5;\n                            polyline.one(overlayId_5 + '_remove', function () {\n                                if (_this.get('_overlays')) {\n                                    _this.get('_overlays')[overlayId_5] = null;\n                                    overlay_5.destroy();\n                                }\n                            });\n                            resolve(overlay_5);\n                        }\n                        else {\n                            reject();\n                        }\n                    });\n                });\n            }\n        })();\n    };\n    GoogleMap.prototype.addPolylineSync = function (options) {\n        var _this = this;\n        return (function () {\n            if (instanceAvailability(_this) === true) {\n                var polyline = _this._objectInstance.addPolyline(options);\n                var overlayId = polyline.getId();\n                var overlay = new Polyline(_this, polyline);\n                _this.get('_overlays')[overlayId] = overlay;\n                polyline.one(overlayId + '_remove', function () {\n                    if (_this.get('_overlays')) {\n                        _this.get('_overlays')[overlayId] = null;\n                        overlay.destroy();\n                    }\n                });\n                return overlay;\n            }\n        })();\n    };\n    GoogleMap.prototype.addTileOverlay = function (options) {\n        var _this = this;\n        return (function () {\n            if (instanceAvailability(_this) === true) {\n                return getPromise(function (resolve, reject) {\n                    _this._objectInstance.addTileOverlay(options, function (tileOverlay) {\n                        if (tileOverlay) {\n                            var overlayId_6 = tileOverlay.getId();\n                            var overlay_6 = new TileOverlay(_this, tileOverlay);\n                            _this.get('_overlays')[overlayId_6] = overlay_6;\n                            tileOverlay.one(overlayId_6 + '_remove', function () {\n                                if (_this.get('_overlays')) {\n                                    _this.get('_overlays')[overlayId_6] = null;\n                                    overlay_6.destroy();\n                                }\n                            });\n                            resolve(overlay_6);\n                        }\n                        else {\n                            reject();\n                        }\n                    });\n                });\n            }\n        })();\n    };\n    GoogleMap.prototype.addTileOverlaySync = function (options) {\n        var _this = this;\n        return (function () {\n            if (instanceAvailability(_this) === true) {\n                var tileOverlay = _this._objectInstance.addTileOverlay(options);\n                var overlayId = tileOverlay.getId();\n                var overlay = new TileOverlay(_this, tileOverlay);\n                _this.get('_overlays')[overlayId] = overlay;\n                tileOverlay.one(overlayId + '_remove', function () {\n                    if (_this.get('_overlays')) {\n                        _this.get('_overlays')[overlayId] = null;\n                        overlay.destroy();\n                    }\n                });\n                return overlay;\n            }\n        })();\n    };\n    GoogleMap.prototype.addGroundOverlay = function (options) {\n        var _this = this;\n        return (function () {\n            if (instanceAvailability(_this) === true) {\n                return getPromise(function (resolve, reject) {\n                    _this._objectInstance.addGroundOverlay(options, function (groundOverlay) {\n                        if (groundOverlay) {\n                            var overlayId_7 = groundOverlay.getId();\n                            var overlay_7 = new GroundOverlay(_this, groundOverlay);\n                            _this.get('_overlays')[overlayId_7] = overlay_7;\n                            groundOverlay.one(overlayId_7 + '_remove', function () {\n                                if (_this.get('_overlays')) {\n                                    _this.get('_overlays')[overlayId_7] = null;\n                                    overlay_7.destroy();\n                                }\n                            });\n                            resolve(overlay_7);\n                        }\n                        else {\n                            reject();\n                        }\n                    });\n                });\n            }\n        })();\n    };\n    GoogleMap.prototype.addGroundOverlaySync = function (options) {\n        var _this = this;\n        return (function () {\n            if (instanceAvailability(_this) === true) {\n                var groundOverlay = _this._objectInstance.addGroundOverlay(options);\n                var overlayId = groundOverlay.getId();\n                var overlay = new GroundOverlay(_this, groundOverlay);\n                _this.get('_overlays')[overlayId] = overlay;\n                groundOverlay.one(overlayId + '_remove', function () {\n                    if (_this.get('_overlays')) {\n                        _this.get('_overlays')[overlayId] = null;\n                        overlay.destroy();\n                    }\n                });\n                return overlay;\n            }\n        })();\n    };\n    GoogleMap.prototype.addKmlOverlay = function (options) {\n        var _this = this;\n        return (function () {\n            if (instanceAvailability(_this) === true) {\n                return getPromise(function (resolve, reject) {\n                    _this._objectInstance.addKmlOverlay(options, function (kmlOverlay) {\n                        if (kmlOverlay) {\n                            var overlayId_8 = kmlOverlay.getId();\n                            var overlay_8 = new KmlOverlay(_this, kmlOverlay);\n                            _this.get('_overlays')[overlayId_8] = overlay_8;\n                            kmlOverlay.one(overlayId_8 + '_remove', function () {\n                                if (_this.get('_overlays')) {\n                                    _this.get('_overlays')[overlayId_8] = null;\n                                    overlay_8.destroy();\n                                }\n                            });\n                            resolve(overlay_8);\n                        }\n                        else {\n                            reject();\n                        }\n                    });\n                });\n            }\n        })();\n    };\n    GoogleMap.prototype.toDataURL = function (options) { return cordovaInstance(this, \"toDataURL\", {}, arguments); };\n    var _c, _d;\n    GoogleMap.pluginName = \"GoogleMaps\";\n    GoogleMap.plugin = \"cordova-plugin-googlemaps\";\n    GoogleMap = __decorate([\n        __metadata(\"design:paramtypes\", [Object, typeof (_d = typeof GoogleMapOptions !== \"undefined\" && GoogleMapOptions) === \"function\" ? _d : Object, Number])\n    ], GoogleMap);\n    return GoogleMap;\n}(BaseClass));\nexport { GoogleMap };\nvar GroundOverlay = /** @class */ (function (_super) {\n    __extends(GroundOverlay, _super);\n    function GroundOverlay(_map, _objectInstance) {\n        var _this = _super.call(this, _objectInstance) || this;\n        _this._map = _map;\n        return _this;\n    }\n    GroundOverlay.prototype.getId = function () { return cordovaInstance(this, \"getId\", { \"sync\": true }, arguments); };\n    /**\n     * Returns the map instance.\n     * @return {GoogleMap}\n     */\n    GroundOverlay.prototype.getMap = function () {\n        return this._map;\n    };\n    GroundOverlay.prototype.setBounds = function (bounds) { return cordovaInstance(this, \"setBounds\", { \"sync\": true }, arguments); };\n    GroundOverlay.prototype.setBearing = function (bearing) { return cordovaInstance(this, \"setBearing\", { \"sync\": true }, arguments); };\n    GroundOverlay.prototype.getBearing = function () { return cordovaInstance(this, \"getBearing\", { \"sync\": true }, arguments); };\n    GroundOverlay.prototype.setImage = function (imageUrl) { return cordovaInstance(this, \"setImage\", { \"sync\": true }, arguments); };\n    GroundOverlay.prototype.setOpacity = function (opacity) { return cordovaInstance(this, \"setOpacity\", { \"sync\": true }, arguments); };\n    GroundOverlay.prototype.getOpacity = function () { return cordovaInstance(this, \"getOpacity\", { \"sync\": true }, arguments); };\n    GroundOverlay.prototype.setClickable = function (clickable) { return cordovaInstance(this, \"setClickable\", { \"sync\": true }, arguments); };\n    GroundOverlay.prototype.getClickable = function () { return cordovaInstance(this, \"getClickable\", { \"sync\": true }, arguments); };\n    GroundOverlay.prototype.setVisible = function (visible) { return cordovaInstance(this, \"setVisible\", { \"sync\": true }, arguments); };\n    GroundOverlay.prototype.getVisible = function () { return cordovaInstance(this, \"getVisible\", { \"sync\": true }, arguments); };\n    GroundOverlay.prototype.setZIndex = function (index) { return cordovaInstance(this, \"setZIndex\", { \"sync\": true }, arguments); };\n    GroundOverlay.prototype.getZIndex = function () { return cordovaInstance(this, \"getZIndex\", { \"sync\": true }, arguments); };\n    GroundOverlay.prototype.remove = function () { return cordovaInstance(this, \"remove\", {}, arguments); };\n    return GroundOverlay;\n}(BaseClass));\nexport { GroundOverlay };\nvar HtmlInfoWindow = /** @class */ (function (_super) {\n    __extends(HtmlInfoWindow, _super);\n    function HtmlInfoWindow() {\n        return _super.call(this, new (GoogleMaps.getPlugin().HtmlInfoWindow)()) || this;\n    }\n    HtmlInfoWindow.prototype.setBackgroundColor = function (color) { return cordovaInstance(this, \"setBackgroundColor\", {}, arguments); };\n    HtmlInfoWindow.prototype.setContent = function (content, cssOptions) { return cordovaInstance(this, \"setContent\", {}, arguments); };\n    HtmlInfoWindow.prototype.open = function (marker) { return cordovaInstance(this, \"open\", {}, arguments); };\n    HtmlInfoWindow.prototype.close = function () { return cordovaInstance(this, \"close\", {}, arguments); };\n    HtmlInfoWindow.plugin = \"cordova-plugin-googlemaps\";\n    HtmlInfoWindow.pluginName = \"GoogleMaps\";\n    HtmlInfoWindow.pluginRef = \"plugin.google.maps.HtmlInfoWindow\";\n    HtmlInfoWindow.repo = \"\";\n    HtmlInfoWindow = __decorate([\n        __metadata(\"design:paramtypes\", [])\n    ], HtmlInfoWindow);\n    return HtmlInfoWindow;\n}(BaseClass));\nexport { HtmlInfoWindow };\nvar Marker = /** @class */ (function (_super) {\n    __extends(Marker, _super);\n    function Marker(_map, _objectInstance) {\n        var _this = _super.call(this, _objectInstance) || this;\n        _this._map = _map;\n        return _this;\n    }\n    Marker.prototype.getId = function () { return cordovaInstance(this, \"getId\", { \"sync\": true }, arguments); };\n    /**\n     * Returns the map instance.\n     * @return {GoogleMap}\n     */\n    Marker.prototype.getMap = function () {\n        return this._map;\n    };\n    Marker.prototype.setPosition = function (latLng) { return cordovaInstance(this, \"setPosition\", { \"sync\": true }, arguments); };\n    Marker.prototype.getPosition = function () { return cordovaInstance(this, \"getPosition\", { \"sync\": true }, arguments); };\n    Marker.prototype.showInfoWindow = function () { return cordovaInstance(this, \"showInfoWindow\", { \"sync\": true }, arguments); };\n    Marker.prototype.hideInfoWindow = function () { return cordovaInstance(this, \"hideInfoWindow\", { \"sync\": true }, arguments); };\n    Marker.prototype.setAnimation = function (animation) { return cordovaInstance(this, \"setAnimation\", { \"sync\": true }, arguments); };\n    Marker.prototype.setDisableAutoPan = function (disableAutoPan) { return cordovaInstance(this, \"setDisableAutoPan\", { \"sync\": true }, arguments); };\n    Marker.prototype.setVisible = function (visible) { return cordovaInstance(this, \"setVisible\", { \"sync\": true }, arguments); };\n    Marker.prototype.isVisible = function () { return cordovaInstance(this, \"isVisible\", { \"sync\": true }, arguments); };\n    Marker.prototype.setTitle = function (title) { return cordovaInstance(this, \"setTitle\", { \"sync\": true }, arguments); };\n    Marker.prototype.getTitle = function () { return cordovaInstance(this, \"getTitle\", { \"sync\": true }, arguments); };\n    Marker.prototype.setSnippet = function (snippet) { return cordovaInstance(this, \"setSnippet\", { \"sync\": true }, arguments); };\n    Marker.prototype.getSnippet = function () { return cordovaInstance(this, \"getSnippet\", { \"sync\": true }, arguments); };\n    Marker.prototype.setOpacity = function (alpha) { return cordovaInstance(this, \"setOpacity\", { \"sync\": true }, arguments); };\n    Marker.prototype.getOpacity = function () { return cordovaInstance(this, \"getOpacity\", { \"sync\": true }, arguments); };\n    Marker.prototype.remove = function () { return cordovaInstance(this, \"remove\", {}, arguments); };\n    Marker.prototype.setIconAnchor = function (x, y) { return cordovaInstance(this, \"setIconAnchor\", { \"sync\": true }, arguments); };\n    Marker.prototype.setInfoWindowAnchor = function (x, y) { return cordovaInstance(this, \"setInfoWindowAnchor\", { \"sync\": true }, arguments); };\n    Marker.prototype.isInfoWindowShown = function () { return cordovaInstance(this, \"isInfoWindowShown\", { \"sync\": true }, arguments); };\n    Marker.prototype.setZIndex = function (zIndex) { return cordovaInstance(this, \"setZIndex\", { \"sync\": true }, arguments); };\n    Marker.prototype.getZIndex = function () { return cordovaInstance(this, \"getZIndex\", { \"sync\": true }, arguments); };\n    Marker.prototype.setDraggable = function (draggable) { return cordovaInstance(this, \"setDraggable\", { \"sync\": true }, arguments); };\n    Marker.prototype.isDraggable = function () { return cordovaInstance(this, \"isDraggable\", { \"sync\": true }, arguments); };\n    Marker.prototype.setFlat = function (flat) { return cordovaInstance(this, \"setFlat\", { \"sync\": true }, arguments); };\n    Marker.prototype.setIcon = function (icon) { return cordovaInstance(this, \"setIcon\", { \"sync\": true }, arguments); };\n    Marker.prototype.setRotation = function (rotation) { return cordovaInstance(this, \"setRotation\", { \"sync\": true }, arguments); };\n    Marker.prototype.getRotation = function () { return cordovaInstance(this, \"getRotation\", { \"sync\": true }, arguments); };\n    return Marker;\n}(BaseClass));\nexport { Marker };\nvar MarkerCluster = /** @class */ (function (_super) {\n    __extends(MarkerCluster, _super);\n    function MarkerCluster(_map, _objectInstance) {\n        var _this = _super.call(this, _objectInstance) || this;\n        _this._map = _map;\n        return _this;\n    }\n    MarkerCluster.prototype.getId = function () { return cordovaInstance(this, \"getId\", { \"sync\": true }, arguments); };\n    MarkerCluster.prototype.addMarker = function (marker) { return cordovaInstance(this, \"addMarker\", { \"sync\": true }, arguments); };\n    MarkerCluster.prototype.addMarkers = function (markers) { return cordovaInstance(this, \"addMarkers\", { \"sync\": true }, arguments); };\n    MarkerCluster.prototype.remove = function () { return cordovaInstance(this, \"remove\", {}, arguments); };\n    /**\n     * Returns the map instance.\n     * @return {GoogleMap}\n     */\n    MarkerCluster.prototype.getMap = function () {\n        return this._map;\n    };\n    return MarkerCluster;\n}(BaseClass));\nexport { MarkerCluster };\nvar Polygon = /** @class */ (function (_super) {\n    __extends(Polygon, _super);\n    function Polygon(_map, _objectInstance) {\n        var _this = _super.call(this, _objectInstance) || this;\n        _this._map = _map;\n        return _this;\n    }\n    Polygon.prototype.getId = function () { return cordovaInstance(this, \"getId\", { \"sync\": true }, arguments); };\n    /**\n     * Returns the map instance.\n     * @return {GoogleMap}\n     */\n    Polygon.prototype.getMap = function () {\n        return this._map;\n    };\n    Polygon.prototype.setPoints = function (points) { return cordovaInstance(this, \"setPoints\", { \"sync\": true }, arguments); };\n    /**\n     * Returns an instance of the BaseArrayClass.\n     * You can modify the points.\n     * @return {BaseArrayClass<ILatLng>}\n     */\n    Polygon.prototype.getPoints = function () {\n        return new BaseArrayClass(this._objectInstance.getPoints());\n    };\n    Polygon.prototype.setHoles = function (holes) { return cordovaInstance(this, \"setHoles\", { \"sync\": true }, arguments); };\n    /**\n     * Returns an instance of the BaseArrayClass.\n     * You can modify the holes.\n     * @return {BaseArrayClass<ILatLng[]>}\n     */\n    Polygon.prototype.getHoles = function () {\n        var holes = this._objectInstance.getPoints();\n        var results = new BaseArrayClass();\n        holes.forEach(function (hole) {\n            results.push(hole);\n        });\n        return results;\n    };\n    Polygon.prototype.setFillColor = function (fillColor) { return cordovaInstance(this, \"setFillColor\", { \"sync\": true }, arguments); };\n    Polygon.prototype.getFillColor = function () { return cordovaInstance(this, \"getFillColor\", { \"sync\": true }, arguments); };\n    Polygon.prototype.setStrokeColor = function (strokeColor) { return cordovaInstance(this, \"setStrokeColor\", { \"sync\": true }, arguments); };\n    Polygon.prototype.getStrokeColor = function () { return cordovaInstance(this, \"getStrokeColor\", { \"sync\": true }, arguments); };\n    Polygon.prototype.setClickable = function (clickable) { return cordovaInstance(this, \"setClickable\", { \"sync\": true }, arguments); };\n    Polygon.prototype.getClickable = function () { return cordovaInstance(this, \"getClickable\", { \"sync\": true }, arguments); };\n    Polygon.prototype.setVisible = function (visible) { return cordovaInstance(this, \"setVisible\", { \"sync\": true }, arguments); };\n    Polygon.prototype.getVisible = function () { return cordovaInstance(this, \"getVisible\", { \"sync\": true }, arguments); };\n    Polygon.prototype.setZIndex = function (zIndex) { return cordovaInstance(this, \"setZIndex\", { \"sync\": true }, arguments); };\n    Polygon.prototype.getZIndex = function () { return cordovaInstance(this, \"getZIndex\", { \"sync\": true }, arguments); };\n    Polygon.prototype.remove = function () { return cordovaInstance(this, \"remove\", {}, arguments); };\n    Polygon.prototype.setStrokeWidth = function (strokeWidth) { return cordovaInstance(this, \"setStrokeWidth\", { \"sync\": true }, arguments); };\n    Polygon.prototype.getStrokeWidth = function () { return cordovaInstance(this, \"getStrokeWidth\", { \"sync\": true }, arguments); };\n    Polygon.prototype.setGeodesic = function (geodesic) { return cordovaInstance(this, \"setGeodesic\", { \"sync\": true }, arguments); };\n    Polygon.prototype.getGeodesic = function () { return cordovaInstance(this, \"getGeodesic\", { \"sync\": true }, arguments); };\n    return Polygon;\n}(BaseClass));\nexport { Polygon };\nvar Polyline = /** @class */ (function (_super) {\n    __extends(Polyline, _super);\n    function Polyline(_map, _objectInstance) {\n        var _this = _super.call(this, _objectInstance) || this;\n        _this._map = _map;\n        return _this;\n    }\n    Polyline.prototype.getId = function () { return cordovaInstance(this, \"getId\", { \"sync\": true }, arguments); };\n    /**\n     * Returns the map instance.\n     * @return {GoogleMap}\n     */\n    Polyline.prototype.getMap = function () {\n        return this._map;\n    };\n    Polyline.prototype.setPoints = function (points) { return cordovaInstance(this, \"setPoints\", { \"sync\": true }, arguments); };\n    /**\n     * Returns an instance of the BaseArrayClass\n     * You can modify the points.\n     * @return {BaseArrayClass<ILatLng>}\n     */\n    Polyline.prototype.getPoints = function () {\n        return new BaseArrayClass(this._objectInstance.getPoints());\n    };\n    Polyline.prototype.setGeoDesic = function (geoDesic) { return cordovaInstance(this, \"setGeoDesic\", { \"sync\": true }, arguments); };\n    Polyline.prototype.getGeodesic = function () { return cordovaInstance(this, \"getGeodesic\", { \"sync\": true }, arguments); };\n    Polyline.prototype.setVisible = function (visible) { return cordovaInstance(this, \"setVisible\", { \"sync\": true }, arguments); };\n    Polyline.prototype.getVisible = function () { return cordovaInstance(this, \"getVisible\", { \"sync\": true }, arguments); };\n    Polyline.prototype.setClickable = function (clickable) { return cordovaInstance(this, \"setClickable\", { \"sync\": true }, arguments); };\n    Polyline.prototype.getClickable = function () { return cordovaInstance(this, \"getClickable\", { \"sync\": true }, arguments); };\n    Polyline.prototype.setStrokeColor = function (strokeColor) { return cordovaInstance(this, \"setStrokeColor\", { \"sync\": true }, arguments); };\n    Polyline.prototype.getStrokeColor = function () { return cordovaInstance(this, \"getStrokeColor\", { \"sync\": true }, arguments); };\n    Polyline.prototype.setStrokeWidth = function (strokeWidth) { return cordovaInstance(this, \"setStrokeWidth\", { \"sync\": true }, arguments); };\n    Polyline.prototype.getStrokeWidth = function () { return cordovaInstance(this, \"getStrokeWidth\", { \"sync\": true }, arguments); };\n    Polyline.prototype.setZIndex = function (index) { return cordovaInstance(this, \"setZIndex\", { \"sync\": true }, arguments); };\n    Polyline.prototype.getZIndex = function () { return cordovaInstance(this, \"getZIndex\", { \"sync\": true }, arguments); };\n    Polyline.prototype.remove = function () { return cordovaInstance(this, \"remove\", {}, arguments); };\n    return Polyline;\n}(BaseClass));\nexport { Polyline };\nvar TileOverlay = /** @class */ (function (_super) {\n    __extends(TileOverlay, _super);\n    function TileOverlay(_map, _objectInstance) {\n        var _this = _super.call(this, _objectInstance) || this;\n        _this._map = _map;\n        return _this;\n    }\n    TileOverlay.prototype.getId = function () { return cordovaInstance(this, \"getId\", { \"sync\": true }, arguments); };\n    /**\n     * Returns the map instance.\n     * @return {GoogleMap}\n     */\n    TileOverlay.prototype.getMap = function () {\n        return this._map;\n    };\n    TileOverlay.prototype.setFadeIn = function (fadeIn) { return cordovaInstance(this, \"setFadeIn\", { \"sync\": true }, arguments); };\n    TileOverlay.prototype.getFadeIn = function () { return cordovaInstance(this, \"getFadeIn\", { \"sync\": true }, arguments); };\n    TileOverlay.prototype.setZIndex = function (zIndex) { return cordovaInstance(this, \"setZIndex\", { \"sync\": true }, arguments); };\n    TileOverlay.prototype.getZIndex = function () { return cordovaInstance(this, \"getZIndex\", { \"sync\": true }, arguments); };\n    TileOverlay.prototype.setOpacity = function (opacity) { return cordovaInstance(this, \"setOpacity\", { \"sync\": true }, arguments); };\n    TileOverlay.prototype.getOpacity = function () { return cordovaInstance(this, \"getOpacity\", { \"sync\": true }, arguments); };\n    TileOverlay.prototype.setVisible = function (visible) { return cordovaInstance(this, \"setVisible\", { \"sync\": true }, arguments); };\n    TileOverlay.prototype.getVisible = function () { return cordovaInstance(this, \"getVisible\", { \"sync\": true }, arguments); };\n    TileOverlay.prototype.getTileSize = function () { return cordovaInstance(this, \"getTileSize\", { \"sync\": true }, arguments); };\n    TileOverlay.prototype.remove = function () { return cordovaInstance(this, \"remove\", {}, arguments); };\n    return TileOverlay;\n}(BaseClass));\nexport { TileOverlay };\nvar KmlOverlay = /** @class */ (function (_super) {\n    __extends(KmlOverlay, _super);\n    function KmlOverlay(_map, _objectInstance) {\n        var _this = _super.call(this, _objectInstance) || this;\n        _this._map = _map;\n        Object.defineProperty(self, 'camera', {\n            value: _this._objectInstance.camera,\n            writable: false\n        });\n        Object.defineProperty(self, 'kmlData', {\n            value: _this._objectInstance.kmlData,\n            writable: false\n        });\n        return _this;\n    }\n    KmlOverlay.prototype.getDefaultViewport = function () { return cordovaInstance(this, \"getDefaultViewport\", { \"sync\": true }, arguments); };\n    KmlOverlay.prototype.getId = function () { return cordovaInstance(this, \"getId\", { \"sync\": true }, arguments); };\n    /**\n     * Returns the map instance.\n     * @return {GoogleMap}\n     */\n    KmlOverlay.prototype.getMap = function () { return this._map; };\n    KmlOverlay.prototype.setVisible = function (visible) { return cordovaInstance(this, \"setVisible\", { \"sync\": true }, arguments); };\n    KmlOverlay.prototype.getVisible = function () { return cordovaInstance(this, \"getVisible\", { \"sync\": true }, arguments); };\n    KmlOverlay.prototype.setClickable = function (clickable) { return cordovaInstance(this, \"setClickable\", { \"sync\": true }, arguments); };\n    KmlOverlay.prototype.getClickable = function () { return cordovaInstance(this, \"getClickable\", { \"sync\": true }, arguments); };\n    KmlOverlay.prototype.remove = function () { return cordovaInstance(this, \"remove\", {}, arguments); };\n    return KmlOverlay;\n}(BaseClass));\nexport { KmlOverlay };\nexport { ɵ0, ɵ1 };\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { MapSearchPage } from './map-search.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: MapSearchPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class MapSearchPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { MapSearchPageRoutingModule } from './map-search-routing.module';\nimport { MapSearchPage } from './map-search.page';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { Base64 } from '@ionic-native/base64/ngx';\nimport { ModalPage } from '../modal/modal.page';\nimport { Routes } from '@angular/router';\nimport { InAppBrowser } from '@awesome-cordova-plugins/in-app-browser/ngx';\nimport { MeetingListProvider } from 'src/app/providers/meeting-list.service';\nimport { ComponentModule } from '../../components/component/component.module';\nimport { StorageService } from 'src/app/providers/storage.service';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: MapSearchPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    TranslateModule,\n    MapSearchPageRoutingModule,\n    ComponentModule\n  ],\n  declarations: [\n    MapSearchPage,\n    ModalPage\n  ],\n  entryComponents: [\n    ModalPage\n  ],\n  providers: [\n    Base64,\n    InAppBrowser,\n    MeetingListProvider,\n    StorageService\n  ]\n})\nexport class MapSearchPageModule {}\n","import { Component, NgZone, OnInit } from '@angular/core';\nimport { StorageService } from '../../providers/storage.service';\nimport { Platform, ModalController } from '@ionic/angular';\nimport { MeetingListProvider } from '../../providers/meeting-list.service';\nimport { LoadingService } from '../../providers/loading.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { GoogleMaps, GoogleMap, GoogleMapOptions, GoogleMapsEvent, MarkerCluster, Marker, MarkerLabel, MarkerOptions,\n         MarkerClusterIcon, MarkerClusterOptions, ILatLng, LatLng, VisibleRegion, CameraPosition, Spherical, Environment,\n         LocationService, MyLocation, Geocoder, GeocoderResult } from '@ionic-native/google-maps/ngx';\nimport { ModalPage } from '../modal/modal.page';\nimport { Base64 } from '@ionic-native/base64/ngx';\n\ndeclare const google: any;\n@Component({\n  selector: 'app-map-search',\n  templateUrl: './map-search.page.html',\n  styleUrls: ['./map-search.page.scss'],\n})\nexport class MapSearchPage implements OnInit {\n\n  meetingList: any = [];\n  loader = null;\n  zoom = 8;\n  mapLatitude: any = 34.2359855;\n  mapLongitude: any = -118.5656689;\n\n  eagerMapLat: number;\n  eagerMapLng: number;\n\n  origLocation = { lat: 51.899, lng: -8.474 };\n  origZoom = 10;\n\n  targLocation = { lat: 51.899, lng: -8.474 };\n  targZoom = 10;\n\n  formattedAddress = '';\n\n  GoogleAutocomplete: { getPlacePredictions: (arg0: { input: any; }, arg1: (predictions: any, status: any) => void) => void; };\n  autocompleteItems: any[];\n  autocomplete: { input: any; };\n\n  latitude = 0;\n  longitude = 0;\n\n  autoRadius = 5;\n  map: GoogleMap;\n  visibleRegion: VisibleRegion;\n  marker: Marker;\n  markers = [];\n  meeting: any;\n  ids: string;\n  data: any;\n  mapDragInProgress = false;\n  cameraMoveInProgress = false;\n  markerCluster: MarkerCluster;\n  Base64MarkerRed: string;\n  Base64MarkerBlue: string;\n  Base64MarkerZero: string;\n\n  Base64ClusterMarkerM1: string;\n  Base64ClusterMarkerM2: string;\n  Base64ClusterMarkerM3: string;\n  Base64ClusterMarkerM4: string;\n  Base64ClusterMarkerM5: string;\n\n  filePathMarkerRed: string;\n  filePathMarkerBlue: string;\n  filePathMarkerZero: string;\n  searchMarker: Marker;\n\n  formatLanguage = 'en';\n\n  constructor(\n    private meetingListProvider: MeetingListProvider,\n    public loadingCtrl: LoadingService,\n    private storage: StorageService,\n    private platform: Platform,\n    private translate: TranslateService,\n    private zone: NgZone,\n    public modalCtrl: ModalController,\n    private base64: Base64,\n  ) {\n    console.log('Map page constructor');\n  }\n\n  async ngOnInit() {\n\n    this.filePathMarkerRed = './assets/markercluster/MarkerRed.png';\n    this.base64.encodeFile(this.filePathMarkerRed).then((base64imageR: string) => {\n      this.Base64MarkerRed = base64imageR;\n    });\n\n    this.filePathMarkerBlue = './assets/markercluster/MarkerBlue.png';\n    this.base64.encodeFile(this.filePathMarkerBlue).then((base64imageB: string) => {\n      this.Base64MarkerBlue = base64imageB;\n    });\n\n    this.filePathMarkerZero = './assets/markercluster/FFFFFF-0.png';\n    this.base64.encodeFile(this.filePathMarkerZero).then((base64imageZ: string) => {\n      this.Base64MarkerZero = base64imageZ;\n    });\n\n    const filePathCusterMarkerM1 = '../../../assets/markercluster/m1.png';\n    this.base64.encodeFile(filePathCusterMarkerM1).then((base64imageM1: string) => {\n      this.Base64ClusterMarkerM1 = base64imageM1;\n    });\n\n    const filePathCusterMarkerM2 = '../../../assets/markercluster/m2.png';\n    this.base64.encodeFile(filePathCusterMarkerM2).then((base64imageM2: string) => {\n      this.Base64ClusterMarkerM2 = base64imageM2;\n    });\n\n    const filePathCusterMarkerM3 = '../../../assets/markercluster/m3.png';\n    this.base64.encodeFile(filePathCusterMarkerM3).then((base64imageM3: string) => {\n      this.Base64ClusterMarkerM3 = base64imageM3;\n    });\n\n    const filePathCusterMarkerM4 = '../../../assets/markercluster/m4.png';\n    this.base64.encodeFile(filePathCusterMarkerM4).then((base64imageM4: string) => {\n      this.Base64ClusterMarkerM4 = base64imageM4;\n    });\n\n    const filePathCusterMarkerM5 = '../../../assets/markercluster/m5.png';\n    this.base64.encodeFile(filePathCusterMarkerM5).then((base64imageM5: string) => {\n      this.Base64ClusterMarkerM5 = base64imageM5;\n    });\n\n\n    this.GoogleAutocomplete = new google.maps.places.AutocompleteService();\n    this.autocomplete = { input: '' };\n    this.autocompleteItems = [];\n\n    await this.platform.ready();\n    await this.loadMap();\n\n  }\n\n  loadMap() {\n\n    Environment.setEnv({\n      API_KEY_FOR_BROWSER_RELEASE: 'AIzaSyAiowBMk_xPfnzaq7wZzcbyuCDpKqzZkyA',\n      API_KEY_FOR_BROWSER_DEBUG: 'AIzaSyAiowBMk_xPfnzaq7wZzcbyuCDpKqzZkyA'\n    });\n\n    this.translate.get('LOCATING').subscribe(value => {\n      this.presentLoader(value);\n    });\n\n    if (LocationService.hasPermission()) {\n      LocationService.getMyLocation().then((myLocation: MyLocation) => {\n        this.mapLatitude = this.eagerMapLat = myLocation.latLng.lat;\n        this.mapLongitude = this.eagerMapLng = myLocation.latLng.lng;\n        this.drawMap();\n        this.dismissLoader();\n      }, (reason) => {\n        this.eagerMapLat = this.mapLatitude;\n        this.eagerMapLng = this.mapLongitude;\n        this.drawMap();\n        this.dismissLoader();\n      });\n    } else {\n      this.eagerMapLat = this.mapLatitude;\n      this.eagerMapLng = this.mapLongitude;\n      this.drawMap();\n      this.dismissLoader();\n    }\n  }\n\n\n  drawMap() {\n    const options: GoogleMapOptions = {\n      building: true,\n      controls: {\n        compass: true,\n        myLocationButton: true,\n        myLocation: true,   // (blue dot)\n        zoom: true,          // android only\n        mapToolbar: true     // android only\n      },\n      gestures: {\n        scroll: true,\n        tilt: true,\n        zoom: true,\n        rotate: true\n      },\n      camera: {\n        target: {\n          lat: this.mapLatitude,\n          lng: this.mapLongitude\n        },\n        zoom: 8\n      }\n    };\n\n    this.map = GoogleMaps.create('map_canvas', options);\n\n    this.map.one(GoogleMapsEvent.MAP_READY).then(this.onMapReady.bind(this));\n  }\n\n  onMapReady() {\n\n    this.map.on(GoogleMapsEvent.MAP_DRAG_START).subscribe((params: any[]) => {\n      this.mapDragInProgress = true;\n    });\n\n    this.map.on(GoogleMapsEvent.MAP_DRAG_END).subscribe((params: any[]) => {\n      this.mapDragInProgress = false;\n    });\n\n    this.map.on(GoogleMapsEvent.CAMERA_MOVE_START).subscribe((params: any[]) => {\n      this.cameraMoveInProgress = true;\n    });\n\n    this.map.on(GoogleMapsEvent.CAMERA_MOVE_END).subscribe((params: any[]) => {\n      if (this.mapDragInProgress === false) {\n        this.cameraMoveInProgress = false;\n        this.translate.get('FINDING_MTGS').subscribe(value => {\n          this.presentLoader(value);\n        });\n\n        // if the map has only moved by less than 10%, then we dont get more meetings,\n        // those will have been eagerly loaded earlier\n        this.origLocation.lat = this.eagerMapLat;\n        this.origLocation.lng = this.eagerMapLng;\n\n        this.targLocation.lat = params[0].target.lat;\n        this.targLocation.lng = params[0].target.lng;\n        this.targZoom = params[0].zoom;\n\n        const mapMovementDistance = Spherical.computeDistanceBetween(this.origLocation, this.targLocation) / 1000;\n        const newSearchTriggerDistance = this.autoRadius / 11;\n        if ((mapMovementDistance > newSearchTriggerDistance) || (this.targZoom < this.origZoom)) {\n          this.deleteCluster();\n          this.getMeetings(params);\n        } else {\n          this.dismissLoader();\n        }\n      }\n    });\n\n    this.map.on('trigger_initial_search_changed').subscribe((params: any[]) => {\n      this.translate.get('FINDING_MTGS').subscribe(value => {\n        this.presentLoader(value);\n      });\n      const mapPositionTarget: ILatLng = this.map.getCameraTarget();\n      const mapPositionZoom = this.map.getCameraZoom();\n      const mapVisiblePosition = this.map.getVisibleRegion();\n\n      params[0] = {\n        target: {\n          lat: mapPositionTarget.lat,\n          lng: mapPositionTarget.lng\n        },\n        zoom: mapPositionZoom,\n        farLeft: {\n          lat: mapVisiblePosition.farLeft.lat,\n          lng: mapVisiblePosition.farLeft.lng\n        }\n      };\n      this.getMeetings(params);\n    });\n\n    if (this.platform.is('ios')) {\n      this.map.set('trigger_initial_search', 'go');\n    }\n\n  }\n\n\n  addCluster() {\n    const markerLabelOptions: MarkerLabel = {\n      bold: true,\n      fontSize: 15,\n      color: 'white',\n      italic: false\n    };\n    let markerClusterIconOptions: MarkerClusterIcon[];\n    if (this.platform.is('ios')) {\n      markerClusterIconOptions = [\n        { min: 3, max: 10, url: this.Base64ClusterMarkerM1, anchor: { x: 16, y: 16 }, label: markerLabelOptions },\n        { min: 11, max: 50, url: this.Base64ClusterMarkerM2, anchor: { x: 16, y: 16 }, label: markerLabelOptions },\n        { min: 51, max: 100, url: this.Base64ClusterMarkerM3, anchor: { x: 24, y: 24 }, label: markerLabelOptions },\n        { min: 101, max: 500, url: this.Base64ClusterMarkerM4, anchor: { x: 24, y: 24 }, label: markerLabelOptions },\n        { min: 501, url: this.Base64ClusterMarkerM5, anchor: { x: 32, y: 32 }, label: markerLabelOptions }\n      ];\n    } else {\n      markerClusterIconOptions = [\n        { min: 3, max: 10, url: './assets/markercluster/m1.png', anchor: { x: 16, y: 16 }, label: markerLabelOptions },\n        { min: 11, max: 50, url: './assets/markercluster/m2.png', anchor: { x: 16, y: 16 }, label: markerLabelOptions },\n        { min: 51, max: 100, url: './assets/markercluster/m3.png', anchor: { x: 24, y: 24 }, label: markerLabelOptions },\n        { min: 101, max: 500, url: './assets/markercluster/m4.png', anchor: { x: 24, y: 24 }, label: markerLabelOptions },\n        { min: 501, url: './assets/markercluster/m5.png', anchor: { x: 32, y: 32 }, label: markerLabelOptions }\n      ];\n    }\n\n    const markerClusterOptions: MarkerClusterOptions = {\n      markers: this.markers,\n      icons: markerClusterIconOptions,\n      boundsDraw: false\n    };\n\n    this.map.addMarkerCluster(markerClusterOptions).then((markerCluster: MarkerCluster) => {\n      this.markerCluster = markerCluster;\n      this.markerCluster.on(GoogleMapsEvent.MARKER_CLICK).subscribe((params: Marker[]) => {\n        const marker: Marker = params[1];\n        this.openMeetingModal(marker.get('ID'));\n      });\n      this.dismissLoader();\n    });\n  }\n\n\n  deleteCluster() {\n    this.markers = [];\n    this.markers.length = 0;\n    this.meetingList = [];\n    this.meetingList.length = 0;\n    if (typeof this.markerCluster !== 'undefined') {\n      this.markerCluster.remove();\n      this.markerCluster.empty();\n      this.markerCluster.destroy();\n    }\n  }\n\n\n  getMeetings(params: any[] | { farLeft: ILatLng; }[]) {\n    this.mapLatitude = params[0].target.lat;\n    this.eagerMapLat = this.mapLatitude;\n\n    this.mapLongitude = params[0].target.lng;\n    this.eagerMapLng = this.mapLongitude;\n\n    this.origZoom = params[0].zoom;\n\n    this.autoRadius = Spherical.computeDistanceBetween(params[0].target, params[0].farLeft) / 1000;\n    // Eagerly load 10% around screen area\n    this.autoRadius = this.autoRadius * 1.1;\n\n    this.meetingListProvider.getRadiusMeetings(this.mapLatitude, this.mapLongitude, this.autoRadius).subscribe((data) => {\n      if (JSON.stringify(data) === '{}') {  // empty result set!\n        this.meetingList = JSON.parse('[]');\n      } else {\n        this.meetingList = data;\n        this.meetingList = this.meetingList.filter((meeting: { latitude }) => meeting.latitude = parseFloat(meeting.latitude));\n        this.meetingList = this.meetingList.filter((meeting: { longitude }) => meeting.longitude = parseFloat(meeting.longitude));\n      }\n      this.populateMarkers();\n      this.addCluster();\n    });\n  }\n\n\n  populateMarkers() {\n\n    this.markers = [];\n    let i: number;\n    let areColocated = false;\n    this.visibleRegion = this.map.getVisibleRegion();\n\n    for (i = 0; i < this.meetingList.length; i++) {\n      const meetingLocation = {\n        lat: this.meetingList[i].latitude,\n        lng: this.meetingList[i].longitude\n      };\n      if (this.visibleRegion.contains((meetingLocation) as LatLng)) {\n        if (i === (this.meetingList.length - 1)) {\n          // Last meeting on the list\n          this.pushStandaloneMeeting(i);\n        } else {\n          // Not the last meeting in the list\n\n          // Is this meeting in the same location as the next meeting on the list?\n          areColocated = this.meetingsAreCoLocated(this.meetingList[i], this.meetingList[i + 1]);\n\n          if (areColocated === false) {\n            this.pushStandaloneMeeting(i);\n          } else {\n            // We have the start of some co-located meetings on the list\n            this.ids = this.meetingList[i].id_bigint;\n            do {\n              this.ids += '&meeting_ids[]=' + this.meetingList[i + 1].id_bigint;\n              if (this.platform.is('ios')) {\n                this.data = {\n                  position: { lat: this.meetingList[i].latitude, lng: this.meetingList[i].longitude },\n                  icon: this.Base64MarkerZero\n                };\n              } else {\n                this.data = {\n                  position: { lat: this.meetingList[i].latitude, lng: this.meetingList[i].longitude },\n                  icon: this.filePathMarkerZero\n                };\n              }\n              this.markers.push(this.data);\n\n              i++;\n              // Is this the end of the list?\n              if (i === (this.meetingList.length - 1)) {\n                break;\n              }\n            } while (this.meetingsAreCoLocated(this.meetingList[i], this.meetingList[i + 1]));\n\n            if (this.platform.is('ios')) {\n              this.data = {\n                position: { lat: this.meetingList[i].latitude, lng: this.meetingList[i].longitude },\n                ID: this.ids,\n                disableAutoPan: true,\n                icon: this.Base64MarkerRed\n              };\n            } else {\n              this.data = {\n                position: { lat: this.meetingList[i].latitude, lng: this.meetingList[i].longitude },\n                ID: this.ids,\n                disableAutoPan: true,\n                icon: this.filePathMarkerRed\n              };\n            }\n            this.markers.push(this.data);\n          }\n        }\n      }\n    }\n  }\n\n\n  meetingsAreCoLocated(i: { latitude: number; longitude: number; }, j: { latitude: number; longitude: number; }) {\n    let areColocated = false;\n    if (((Math.round(i.latitude * 1000) / 1000) !== (Math.round(j.latitude * 1000) / 1000)) ||\n      ((Math.round(i.longitude * 1000) / 1000) !== (Math.round(j.longitude * 1000) / 1000))) {\n      areColocated = false;\n    } else {\n      areColocated = true;\n    }\n    return areColocated;\n  }\n\n\n  pushStandaloneMeeting(i: number) {\n    if (this.platform.is('ios')) {\n      this.data = {\n        position: { lat: this.meetingList[i].latitude, lng: this.meetingList[i].longitude },\n        ID: this.meetingList[i].id_bigint,\n        disableAutoPan: true,\n        icon: this.Base64MarkerBlue\n      };\n    } else {\n      this.data = {\n        position: { lat: this.meetingList[i].latitude, lng: this.meetingList[i].longitude },\n        ID: this.meetingList[i].id_bigint,\n        disableAutoPan: true,\n        icon: this.filePathMarkerBlue\n      };\n    }\n    this.markers.push(this.data);\n  }\n\n\n  updateSearchResults() {\n    if (this.autocomplete.input === '') {\n      this.autocompleteItems = [];\n      return;\n    }\n    this.GoogleAutocomplete.getPlacePredictions({ input: this.autocomplete.input },\n      (predictions, status) => {\n        this.autocompleteItems = [];\n        this.zone.run(() => {\n          predictions.forEach((prediction: any) => {\n            this.autocompleteItems.push(prediction);\n          });\n        });\n      });\n  }\n\n\n  selectSearchResult(item: { description: string }) {\n    this.autocompleteItems = [];\n    this.autocomplete.input = item.description;\n\n    // Address -> latitude,longitude\n    Geocoder.geocode({\n      address: item.description\n    }).then((results: GeocoderResult[]) => {\n\n      // Add a marker\n      if (this.searchMarker) {\n        this.searchMarker.remove();\n      }\n\n      this.searchMarker = this.map.addMarkerSync({\n        position: results[0].position,\n        title: item.description\n      });\n\n      this.searchMarker.on(GoogleMapsEvent.MARKER_CLICK).subscribe(this.onMarkerClick);\n      this.searchMarker.on(GoogleMapsEvent.INFO_CLICK).subscribe(this.onMarkerClick);\n\n      // Move to the position\n      this.map.moveCamera({\n        target: results[0].position,\n        zoom: 10\n      }).then(() => {\n        this.searchMarker.showInfoWindow();\n      });\n    });\n  }\n\n\n  public onMarkerClick(params: any) {\n    const searchMarkerClicked: Marker = params[1] as Marker;\n    const isSearchMarkerClicked: any = searchMarkerClicked.get('isInfoWindowVisible');\n\n    if (searchMarkerClicked.isInfoWindowShown() === true) {\n      searchMarkerClicked.hideInfoWindow();\n    } else {\n      searchMarkerClicked.showInfoWindow();\n    }\n  }\n\n\n  presentLoader(loaderText: any) {\n    if (!this.loader) {\n      this.loader = this.loadingCtrl.present(loaderText);\n    }\n  }\n\n\n  dismissLoader() {\n    if (this.loader) {\n      console.log('Dismissing loader..');\n      this.loader = this.loadingCtrl.dismiss();\n      this.loader = null;\n    }\n  }\n\n\n  openMeetingModal(meetingID) {\n    console.log('openMeetingModal()');\n    this.meetingListProvider.getSingleMeetingByID(meetingID).subscribe((meeting) => {\n      this.meeting = meeting;\n      this.meeting.filter((i) => i.start_time_raw = this.convertTo12Hr(i.start_time));\n      this.openModal(this.meeting);\n    });\n  }\n\n\n  async openModal(meeting) {\n    const modal = await this.modalCtrl.create({\n      component: ModalPage,\n      componentProps: {\n        data: this.meeting\n      }\n    });\n\n    modal.onDidDismiss().then((dataReturned) => {\n    });\n\n    return await modal.present();\n  }\n\n  public openMapsLink(destLatitude: string, destLongitude: string) {\n    window.open('https://www.google.com/maps/search/?api=1&query=' + destLatitude + '%2C' + destLongitude + ')', '_system');\n  }\n\n  public convertTo12Hr(timeString) {\n    const H = +timeString.substr(0, 2);\n    const h = H % 12 || 12;\n    const ampm = (H < 12 || H === 24) ? ' am' : ' pm';\n    timeString = h + timeString.substr(2, 3) + ampm;\n    return timeString;\n  }\n\n}\n\n","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button></ion-menu-button>\\n    </ion-buttons>\\n    <ion-title>\\n      {{'MAP_SEARCH' | translate}}\\n    </ion-title>\\n  </ion-toolbar>\\n  <ion-searchbar no-padding [(ngModel)]=\\\"autocomplete.input\\\" (ionInput)=\\\"updateSearchResults()\\\" placeholder=\\\"search\\\">\\n  </ion-searchbar>\\n</ion-header>\\n\\n<ion-content>\\n\\n  <ion-list [hidden]=\\\"autocompleteItems.length == 0\\\">\\n    <ion-item *ngFor=\\\"let item of autocompleteItems\\\" tappable (click)=\\\"selectSearchResult(item)\\\">\\n      {{ item.description }}\\n    </ion-item>\\n  </ion-list>\\n\\n  <div id=\\\"map_canvas\\\"></div>\\n\\n</ion-content>\";"],"names":[],"sourceRoot":"webpack:///"}